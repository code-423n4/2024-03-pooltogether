{
  "reportUid": "brMvkEtRD9Y",
  "labels": [
    {
      "name": "QA (Quality Assurance)",
      "color": "1D76DB"
    }
  ],
  "comment": "> Note: instance references are limited to a maximum ~99 to keep the report length reasonable",
  "footnote": null,
  "findings": [
    {
      "severity": "Medium",
      "title": "Contracts are vulnerable to rebasing accounting-related issues",
      "description": "> The readme **does not** specifically exclude rebasing tokens\n\nRebasing tokens are tokens that have each holder's `balanceof()` increase over time. Aave aTokens are an example of such tokens. If rebasing tokens are used, rewards accrue to the contract holding the tokens, and cannot be withdrawn by the original depositor. To address the issue, track 'shares' deposited on a pro-rata basis, and let shares be redeemed for their proportion of the current balance at the time of the withdrawal.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Ensure shares are tracked for rebasing tokens\n 854 |  _asset.safeTransferFrom(\n 855 |      _caller,\n 856 |      address(this),\n 857 |      _assets\n 858 |  );\n```",
          "loc": [
            "[854-858](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L854-L858)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Ensure shares are tracked for rebasing tokens\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "ERC-20: 'transfer()'/'transferFrom()' return values should be checked",
      "description": "Not all `IERC20` implementations `revert()` when there's a failure in `transfer()`/`transferFrom()`. The function signature has a `boolean` return value and they indicate errors that way [instead](https://etherscan.io/address/0x25d772b21b0e5197f2dc8169e3aa976b16be04ac#code#F1#L44). By not checking the return value, operations that should have marked as failed, may potentially go through without actually making a payment",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Check return value\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Check return value\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "ERC20: unsafe use of `transfer()`/`transferFrom()` ",
      "description": "Some tokens do not implement the ERC20 standard properly but are still accepted by most code that accepts ERC20 tokens.  For example Tether (USDT)'s `transfer()` and `transferFrom()` functions on L1 do not return booleans as the specification requires, and instead have no return value. When these sorts of tokens are cast to `IERC20`, their [function signatures](https://medium.com/coinmonks/missing-return-value-bug-at-least-130-tokens-affected-d67bf08521ca) do not match and therefore the calls made, revert (see [this](https://gist.github.com/IllIllI000/2b00a32e8f0559e8f386ea4f1800abc5) link for a test case). Use OpenZeppelinâ€™s `SafeERC20`'s `safeTransfer()`/`safeTransferFrom()` instead",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use safeTransfer()/safeTransferFrom()\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Use safeTransfer()/safeTransferFrom()\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Medium",
      "title": "Return values of `approve()` not checked",
      "description": "Not all `IERC20` implementations `revert()` when there's a failure in `approve()`. The function signature has a `boolean` return value and they indicate errors that way instead. By not checking the return value, operations that should have marked as failed, may potentially go through without actually approving anything.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Check approve() return value\n 862 |  _asset.approve(address(yieldVault), _assetsWithDust);\n\n     |  // @audit-issue Check approve() return value\n 869 |  _asset.approve(address(yieldVault), 0);\n```",
          "loc": [
            "[862](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L862)",
            "[869](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L869)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Arrays can grow in size without a way to shrink them",
      "description": "Array entries are added but are never removed. Consider whether this should be the case, or whether there should be a maximum, or whether old entries should be removed. Cases where there are specific potential problems will be flagged separately under a different issue.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue No corresponding `pop()` for this `push()`\n 120 |  allVaults.push(_vault);\n```",
          "loc": [
            "[120](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L120)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Code does not follow the best practice of check-effects-interaction",
      "description": "Code should follow the best-practice of [check-effects-interaction](https://blockchain-academy.hs-mittweida.de/courses/solidity-coding-beginners-to-intermediate/lessons/solidity-11-coding-patterns/topic/checks-effects-interactions/), where state variables are updated before any external calls are made. Doing so prevents a large class of reentrancy bugs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-info External call\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n  :  |\n     |  // @audit-issue State variable assignment after external call\n 121 |  deployedVaults[address(_vault)] = true;\n```",
          "loc": [
            "[121](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L121)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Consider disallowing minting/transfers to `address(this)`",
      "description": "A tranfer to the token contract itself is unlikely to be correct and more likely to be a common user error due to a copy & paste mistake. Proceeding with such a transfer will result in the permanent loss of user tokens.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Check receiver isn't `address(this)`\n 482 |  function mint(uint256 _shares, address _receiver) external returns (uint256) {\n 483 |      uint256 _assets = previewMint(_shares);\n 484 |      _depositAndMint(msg.sender, _receiver, _assets, _shares);\n 485 |      return _assets;\n 486 |  }\n```",
          "loc": [
            "[482-486](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L482-L486)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Check receiver isn't `address(this)`\n  76 |  function _mint(address _receiver, uint256 _amount) internal virtual override {\n  77 |      twabController.mint(_receiver, SafeCast.toUint96(_amount));\n  78 |      emit Transfer(address(0), _receiver, _amount);\n  79 |  }\n```",
          "loc": [
            "[76-79](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L76-L79)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Consider implementing two-step procedure for updating protocol addresses",
      "description": "A copy-paste error or a typo may end up bricking protocol functionality, or sending tokens to an address with no known private key. Consider implementing a two-step procedure for updating protocol addresses, where the recipient is set as pending, and must 'accept' the assignment by making an affirmative call. A straight forward way of doing this would be to have the target contracts implement [EIP-165](https://eips.ethereum.org/EIPS/eip-165), and to have the 'set' functions ensure that the recipient is of the right interface type.\r\n                    \r\nNote: this is different for **non-**`address` parameters, where the recommendation is to use a timelock.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 735 |  function setClaimer(address _claimer) external onlyOwner {\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 759 |  function setYieldFeeRecipient(address _yieldFeeRecipient) external onlyOwner {\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n```",
          "loc": [
            "[735](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L735)",
            "[742](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L742)",
            "[759](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L759)",
            "[958](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L958)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 128 |  function _setClaimer(address _claimer) internal {\n```",
          "loc": [
            "[128](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L128)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "ERC-20: Large transfers may revert",
      "description": "Some `IERC20` implementations (e.g `UNI`, `COMP`) may fail if the valued `transferred` is larger than `uint96`. [Source](https://github.com/d-xo/weird-erc20/blob/main/src/Uint96.sol).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Check balance before & after vs. expected\n 854 |  _asset.safeTransferFrom(\n 855 |      _caller,\n 856 |      address(this),\n 857 |      _assets\n 858 |  );\n\n     |  // @audit-issue Check balance before & after vs. expected\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[854-858](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L854-L858)",
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Check balance before & after vs. expected\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Events may be emitted out of order due to reentrancy",
      "description": "To strictly conform to the Checks Effects Interactions pattern, it is recommended to emit events before any external interactions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |      // @audit-info External call\n 559 |      twabController.sponsor(_owner);\n  :  |\n     |  // @audit-issue Event emitted after external call\n 562 |  emit Sponsor(_owner, _assets, _shares);\n\n     |  // @audit-info External call\n 854 |  _asset.safeTransferFrom(\n 855 |      _caller,\n 856 |      address(this),\n 857 |      _assets\n 858 |  );\n  :  |\n     |  // @audit-info External call\n 862 |  _asset.approve(address(yieldVault), _assetsWithDust);\n  :  |\n     |      // @audit-info External call\n 869 |      _asset.approve(address(yieldVault), 0);\n  :  |\n     |  // @audit-issue Event emitted after external call\n 876 |  emit Deposit(_caller, _receiver, _assets, _shares);\n```",
          "loc": [
            "[562](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L562)",
            "[876](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L876)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-info External call\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n  :  |\n     |  // @audit-issue Event emitted after external call\n 123 |  emit NewPrizeVault(\n 124 |      _vault,\n 125 |      _yieldVault,\n 126 |      _prizePool,\n 127 |      _name,\n 128 |      _symbol\n 129 |  );\n```",
          "loc": [
            "[123-129](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L123-L129)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-info External call\n  77 |  twabController.mint(_receiver, SafeCast.toUint96(_amount));\n     |  // @audit-issue Event emitted after external call\n  78 |  emit Transfer(address(0), _receiver, _amount);\n\n     |  // @audit-info External call\n  88 |  twabController.burn(_owner, SafeCast.toUint96(_amount));\n     |  // @audit-issue Event emitted after external call\n  89 |  emit Transfer(_owner, address(0), _amount);\n\n     |  // @audit-info External call\n 101 |  twabController.transfer(_from, _to, SafeCast.toUint96(_amount));\n     |  // @audit-issue Event emitted after external call\n 102 |  emit Transfer(_from, _to, _amount);\n```",
          "loc": [
            "[78](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L78)",
            "[89](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L89)",
            "[102](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L102)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "File allows a version of solidity that is susceptible to `.selector`-related optimizer bug",
      "description": "In solidity versions prior to 0.8.21, there is a legacy code generation [bug](https://soliditylang.org/blog/2023/07/19/missing-side-effects-on-selector-access-bug/) where if `foo().selector` is called, `foo()` doesn't actually get evaluated. It is listed as low-severity, because projects usually use the contract name rather than a function call to look up the selector. I've flagged all files using `.selector` where the version is vulnerable.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Functions calling contracts/addresses with transfer hooks are missing reentrancy guards",
      "description": "Even if the function follows the best practice of check-effects-interaction, not using a reentrancy guard when there may be transfer hooks will open the users of this protocol up to [read-only reentrancies](https://chainsecurity.com/curve-lp-oracle-manipulation-post-mortem/) with no way to protect against it, except by block-listing the whole protocol.\r\n\r\n> Note: the instances below may show multiple paths, via other functions, to the same `transfer` to ensure all paths have been considered",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info No re-entrancy guard\n 659 |  function transferTokensOut(\n 660 |      address,\n 661 |      address _receiver,\n 662 |      address _tokenOut,\n 663 |      uint256 _amountOut\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n  :  |\n     |          // @audit-issue Add re-entrancy guard to protect against transfer hook manipulation\n 939 |          _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0x0)` in the constructor/initializer",
      "description": "Since `address(0x0)` has no private key, it is almost always a mistake when used outside of burning operations, and would result in losing deployment due to the need for redeployment.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue yieldVault_\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n```",
          "loc": [
            "[289-299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L289-L299)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue twabController_\n  42 |  constructor(\n  43 |      string memory name_,\n  44 |      string memory symbol_,\n  45 |      TwabController twabController_\n  46 |  ) ERC20(name_, symbol_) ERC20Permit(name_) {\n```",
          "loc": [
            "[42-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L42-L46)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue prizePool_\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for `address(0x0)` when updating `address` state variables",
      "description": "Since `address(0x0)` has no private key, it is almost always a mistake when used outside of burning operations.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Verify `_yieldFeeRecipient` != address(0)\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n```",
          "loc": [
            "[958](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L958)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Missing checks for state variable assignments",
      "description": "There are some missing checks in these functions, and this could lead to unexpected scenarios. Consider always adding a sanity check for state variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue `_yieldFeeRecipient` is assigned to a state variable, unvalidated\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n```",
          "loc": [
            "[958](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L958)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Owner can renounce Ownership",
      "description": "Each of the following contracts implements or inherits the `renounceOwnership()` function. This can represent a certain risk if the ownership is renounced for any other reason than by design. Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider whether `renounceOwnership` is required\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L65)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Some tokens may revert when zero value transfers are made",
      "description": "In spite of the fact that EIP-20 [states](https://github.com/ethereum/EIPs/blob/46b9b698815abbfa628cd1097311deee77dd45c5/EIPS/eip-20.md?plain=1#L116) that zero-valued transfers must be accepted, some tokens, such as LEND will revert if this is attempted, which may cause transactions that involve other tokens (such as batch operations) to fully revert. Consider skipping the transfer if the amount is zero, which will also save gas.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Check transfer amount > 0\n 854 |  _asset.safeTransferFrom(\n 855 |      _caller,\n 856 |      address(this),\n 857 |      _assets\n 858 |  );\n\n     |  // @audit-issue Check transfer amount > 0\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[854-858](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L854-L858)",
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Check transfer amount > 0\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "The `owner` is a single point of failure and a centralization risk",
      "description": "Having a single EOA as the only owner of contracts is a large centralization risk and a single point of failure. A single private key may be taken in a hack, or the sole holder of the key may become unable to retrieve the key when necessary, or the single owner can become malicious and perform a rug-pull. Consider changing to a multi-signature setup, and or having a role-based authorization model.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider more granular roles to limit centralization risks\n 735 |  function setClaimer(address _claimer) external onlyOwner {\n\n     |  // @audit-issue Consider more granular roles to limit centralization risks\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n\n     |  // @audit-issue Consider more granular roles to limit centralization risks\n 753 |  function setYieldFeePercentage(uint32 _yieldFeePercentage) external onlyOwner {\n\n     |  // @audit-issue Consider more granular roles to limit centralization risks\n 759 |  function setYieldFeeRecipient(address _yieldFeeRecipient) external onlyOwner {\n```",
          "loc": [
            "[735](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L735)",
            "[742](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L742)",
            "[753](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L753)",
            "[759](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L759)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Unsafe integer downcast",
      "description": "When a type is downcast to a smaller type, the higher order bits are truncated, effectively applying a modulo to the original value. Without any other checks, this wrapping will lead to unexpected behavior and bugs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Casting from uint256 to uint8 will truncate bits\n 779 |  return (true, uint8(returnedDecimals));\n```",
          "loc": [
            "[779](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L779)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Use `Ownable2Step` rather than `Ownable`",
      "description": "[`Ownable2Step`](https://github.com/OpenZeppelin/openzeppelin-contracts/blob/3d7a93876a2e5e1d7fe29b5a0e96e222afdc4cfa/contracts/access/Ownable2Step.sol#L31-L56) and [`Ownable2StepUpgradeable`](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/blob/25aabd286e002a1526c345c8db259d57bdf0ad28/contracts/access/Ownable2StepUpgradeable.sol#L47-L63) prevent the contract ownership from mistakenly being transferred to an address that cannot handle it (e.g. due to a typo in the address), by requiring that the recipient of the owner permissions actively accept via a contract call of its own.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider Ownable2Step instead of Ownable\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L65)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "Use `abi.encodeCall()` instead of `abi.encodeWithSignature()`/`abi.encodeWithSelector()`",
      "description": "`abi.encodeCall()` has compiler [type safety](https://github.com/OpenZeppelin/openzeppelin-contracts/issues/3693), whereas the other two functions do not",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider abi.encodeCall\n 774 |  abi.encodeWithSelector(IERC20Metadata.decimals.selector)\n```",
          "loc": [
            "[774](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L774)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`approve()`/`safeApprove()` may revert if the current approval is not zero",
      "description": "Calling `approve()` without first calling `approve(0)` if the current approval is non-zero will revert with some tokens, such as Tether (USDT). While Tether is known to do this, it applies to other tokens as well, which are trying to protect against [this attack vector](https://docs.google.com/document/d/1YLPtQxZu1UAvO9cZ1O2RPXBbT0mooh4DYKjA_jp-RLM/edit). `safeApprove()` itself also implements this protection.\r\n\r\nAlways reset the approval to zero before changing it to a new value (OpenZeppelin's `SafeERC20.forceApprove()` does this for you), or use `safeIncreaseAllowance()`/`safeDecreaseAllowance()`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Call approve(0) first\n 862 |  _asset.approve(address(yieldVault), _assetsWithDust);\n\n     |  // @audit-issue Call approve(0) first\n 869 |  _asset.approve(address(yieldVault), 0);\n```",
          "loc": [
            "[862](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L862)",
            "[869](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L869)"
          ]
        }
      ]
    },
    {
      "severity": "Low",
      "title": "`unchecked` blocks with subtractions may underflow",
      "description": "There aren't any checks to avoid an underflow which can happen inside an `unchecked` block, so the following subtractions may underflow silently.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info This unchecked block has risks\n 387 |  unchecked {\n     |      // @audit-issue This unchecked arithmetic operation is unsafe\n 388 |      _maxDeposit = _maxYieldVaultDeposit - _latentBalance;\n\n     |  // @audit-info This unchecked block has risks\n 799 |  unchecked {\n     |      // @audit-issue This unchecked arithmetic operation is unsafe\n 800 |      return type(uint96).max - _totalSupply;\n\n     |  // @audit-info This unchecked block has risks\n 812 |  unchecked {\n     |      // @audit-issue This unchecked arithmetic operation is unsafe\n 813 |      return _totalAssets - totalDebt_;\n\n     |  // @audit-info This unchecked block has risks\n 827 |  unchecked {\n     |      // @audit-issue This unchecked arithmetic operation is unsafe\n 828 |      return totalYieldBalance_ - _yieldBuffer;\n```",
          "loc": [
            "[388](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L388)",
            "[800](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L800)",
            "[813](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L813)",
            "[828](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L828)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Add inline comments for unnamed variables",
      "description": "`function foo(address x, address)` -> `function foo(address x, address /* y */)`",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider inline comments for the unnamed variable here\n 374 |  function maxDeposit(address) public view returns (uint256) {\n\n     |  // @audit-issue Consider inline comments for the unnamed variable here\n 660 |  address,\n\n     |  // @audit-issue Consider inline comments for the unnamed variable here\n 706 |  bytes calldata\n\n     |  // @audit-issue Consider inline comments for the unnamed variable here\n 717 |  function targetOf(address) external view returns (address) {\n```",
          "loc": [
            "[374](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L374)",
            "[660](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L660)",
            "[706](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L706)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Complex arithmetic expression",
      "description": "To maintain readability in code, particularly in Solidity which can involve complex mathematical operations, it is often recommended to limit the number of arithmetic operations to a maximum of 2-3 per line. Too many operations in a single line can make the code difficult to read and understand, increase the likelihood of mistakes, and complicate the process of debugging and reviewing the code. Consider splitting such operations over more than one line, take special care when dealing with division however. Try to limit the number of arithmetic operations to a maximum of 3 per statement.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Simplify by using intermediate variables\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n```",
          "loc": [
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding a block/deny-list",
      "description": "Doing so will significantly increase centralization, but will help to prevent hackers from using stolen tokens.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider adding a block/deny-list\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L65)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider adding a block/deny-list\n  19 |  contract TwabERC20 is ERC20, ERC20Permit {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Consider adding a block/deny-list\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding emergency-stop functionality",
      "description": "Adding a way to quickly halt protocol functionality in an emergency, rather than having to pause individual contracts one-by-one, will make in-progress hack mitigation faster and much less stressful.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider adding emergency-stop functionality\n  13 |  contract PrizeVaultFactory {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Consider adding emergency-stop functionality\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding formal verification proofs",
      "description": "Consider using formal verification to mathematically prove that your code does what is intended, and does not have any edge cases with unexpected behavior. The solidity compiler itself has this functionality [built in](https://docs.soliditylang.org/en/latest/smtchecker.html#smtchecker-and-formal-verification).            \r\n            ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L1)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider adding validation of user inputs",
      "description": "There are no validations done on the arguments below. Consider that the Solidity [documentation](https://docs.soliditylang.org/en/latest/control-structures.html#panic-via-assert-and-error-via-require) states that `Properly functioning code should never create a Panic, not even on invalid external input. If this happens, then there is a bug in your contract which you should fix`. This means that there should be explicit checks for expected ranges of inputs. Underflows/overflows result in panics should not be used as range checks, and allowing funds to be sent to  `0x0`, which is the default value of address variables and has many gotchas, should be avoided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Validate `_assets`\n 341 |  function convertToShares(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_shares`\n 355 |  function convertToAssets(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Validate ``\n 374 |  function maxDeposit(address) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_owner`\n 397 |  function maxMint(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_owner`\n 404 |  function maxWithdraw(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_owner`\n 415 |  function maxRedeem(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_assets`\n 441 |  function previewDeposit(uint256 _assets) public pure returns (uint256) {\n\n     |  // @audit-issue Validate `_shares`\n 447 |  function previewMint(uint256 _shares) public pure returns (uint256) {\n\n     |  // @audit-issue Validate `_assets`\n 454 |  function previewWithdraw(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_shares`\n 470 |  function previewRedeem(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Validate `_assets`\n     |  // Validate `_receiver`\n 475 |  function deposit(uint256 _assets, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Validate `_shares`\n     |  // Validate `_receiver`\n 482 |  function mint(uint256 _shares, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Validate `_assets`\n     |  // Validate `_receiver`\n     |  // Validate `_owner`\n 489 |  function withdraw(\n 490 |      uint256 _assets,\n 491 |      address _receiver,\n 492 |      address _owner\n 493 |  ) external returns (uint256) {\n\n     |  // @audit-issue Validate `_shares`\n     |  // Validate `_receiver`\n     |  // Validate `_owner`\n 500 |  function redeem(\n 501 |      uint256 _shares,\n 502 |      address _receiver,\n 503 |      address _owner\n 504 |  ) external returns (uint256) {\n\n     |  // @audit-issue Validate `_deadline`\n     |  // Validate `_v`\n     |  // Validate `_r`\n     |  // Validate `_s`\n 524 |  function depositWithPermit(\n 525 |      uint256 _assets,\n 526 |      address _owner,\n 527 |      uint256 _deadline,\n 528 |      uint8 _v,\n 529 |      bytes32 _r,\n 530 |      bytes32 _s\n 531 |  ) external returns (uint256) {\n\n     |  // @audit-issue Validate `_assets`\n 552 |  function sponsor(uint256 _assets) external returns (uint256) {\n\n     |  // @audit-issue Validate ``\n     |  // Validate `_receiver`\n 659 |  function transferTokensOut(\n 660 |      address,\n 661 |      address _receiver,\n 662 |      address _tokenOut,\n 663 |      uint256 _amountOut\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n\n     |  // @audit-issue Validate `_amountIn`\n     |  // Validate ``\n 703 |  function verifyTokensIn(\n 704 |      address _tokenIn,\n 705 |      uint256 _amountIn,\n 706 |      bytes calldata\n 707 |  ) external onlyLiquidationPair {\n\n     |  // @audit-issue Validate ``\n 717 |  function targetOf(address) external view returns (address) {\n```",
          "loc": [
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[355](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L355)",
            "[374](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L374)",
            "[397](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L397)",
            "[404](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L404)",
            "[415](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L415)",
            "[441](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L441)",
            "[447](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L447)",
            "[454](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L454)",
            "[470](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L470)",
            "[475](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L475)",
            "[482](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L482)",
            "[489-493](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L489-L493)",
            "[500-504](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L500-L504)",
            "[524-531](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L524-L531)",
            "[552](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L552)",
            "[659-664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L664)",
            "[703-707](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L703-L707)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Validate `_name`\n     |  // Validate `_symbol`\n     |  // Validate `_yieldVault`\n     |  // Validate `_prizePool`\n     |  // Validate `_claimer`\n     |  // Validate `_yieldFeeRecipient`\n     |  // Validate `_yieldFeePercentage`\n     |  // Validate `_owner`\n  92 |  function deployVault(\n  93 |    string memory _name,\n  94 |    string memory _symbol,\n  95 |    IERC4626 _yieldVault,\n  96 |    PrizePool _prizePool,\n  97 |    address _claimer,\n  98 |    address _yieldFeeRecipient,\n  99 |    uint32 _yieldFeePercentage,\n 100 |    address _owner\n 101 |  ) external returns (PrizeVault) {\n```",
          "loc": [
            "[92-101](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L92-L101)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Validate `_account`\n  56 |  function balanceOf(\n  57 |      address _account\n  58 |  ) public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Validate `_winner`\n     |  // Validate `_tier`\n     |  // Validate `_prizeIndex`\n     |  // Validate `_reward`\n     |  // Validate `_rewardRecipient`\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[76-82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L76-L82)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Validate `account`\n  22 |  function getHooks(address account) external view returns (VaultHooks memory) {\n\n     |  // @audit-issue Validate `hooks`\n  29 |  function setHooks(VaultHooks calldata hooks) external {\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L22)",
            "[29](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L29)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Validate `winner`\n     |  // Validate `tier`\n     |  // Validate `prizeIndex`\n     |  // Validate `reward`\n     |  // Validate `rewardRecipient`\n  26 |  function beforeClaimPrize(\n  27 |      address winner,\n  28 |      uint8 tier,\n  29 |      uint32 prizeIndex,\n  30 |      uint96 reward,\n  31 |      address rewardRecipient\n  32 |  ) external returns (address);\n\n     |  // @audit-issue Validate `winner`\n     |  // Validate `tier`\n     |  // Validate `prizeIndex`\n     |  // Validate `prize`\n     |  // Validate `recipient`\n  40 |  function afterClaimPrize(\n  41 |      address winner,\n  42 |      uint8 tier,\n  43 |      uint32 prizeIndex,\n  44 |      uint256 prize,\n  45 |      address recipient\n  46 |  ) external;\n```",
          "loc": [
            "[26-32](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L26-L32)",
            "[40-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L40-L46)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider disabling `renounceOwnership()`",
      "description": "If the plan for your project does not include eventually giving up all ownership control, consider overwriting OpenZeppelin's `Ownable`'s `renounceOwnership()` function in order to disable it.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider overriding `renounceOwnership` and disabling it\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L65)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider emitting an event from `constructor`s",
      "description": "Use events to monitor deployments are successful and/or to signal significant changes to off-chain monitoring tools.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider emitting an event\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n```",
          "loc": [
            "[289-299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L289-L299)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider emitting an event\n  42 |  constructor(\n  43 |      string memory name_,\n  44 |      string memory symbol_,\n  45 |      TwabController twabController_\n  46 |  ) ERC20(name_, symbol_) ERC20Permit(name_) {\n```",
          "loc": [
            "[42-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L42-L46)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider emitting an event\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider making contracts `Upgradeable`",
      "description": "This allows for bugs to be fixed in production, at the expense of increased centralization.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider making this critical contract upgradeable\n  13 |  contract PrizeVaultFactory {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Consider making this critical contract upgradeable\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider moving `msg.sender` checks to `modifier`s",
      "description": "Using `modifier`s makes the contract guard intention of the code more clear, and also guarantees no other code can run before the modifier runs.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Refactor into a modifier\n 261 |  if (msg.sender != liquidationPair) {\n 262 |      revert CallerNotLP(msg.sender, liquidationPair);\n 263 |  }\n\n     |  // @audit-issue Refactor into a modifier\n 269 |  if (msg.sender != yieldFeeRecipient) {\n 270 |      revert CallerNotYieldFeeRecipient(msg.sender, yieldFeeRecipient);\n 271 |  }\n\n     |  // @audit-issue Refactor into a modifier\n 532 |  if (_owner != msg.sender) {\n 533 |      revert PermitCallerNotOwner(msg.sender, _owner);\n 534 |  }\n```",
          "loc": [
            "[261-263](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L261-L263)",
            "[269-271](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L269-L271)",
            "[532-534](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L532-L534)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Refactor into a modifier\n  53 |  if (msg.sender != claimer) revert CallerNotClaimer(msg.sender, claimer);\n```",
          "loc": [
            "[53](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L53)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider providing a ranged getter for array state variables",
      "description": "While the compiler automatically provides a getter for accessing single elements within a public state variable array, it doesn't provide a way to fetch the whole array, or subsets thereof. Consider adding a function to allow the fetching of slices of the array, especially if the contract doesn't already have multicall functionality.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Provide a ranged getter\n  66 |  PrizeVault[] public allVaults;\n```",
          "loc": [
            "[66](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L66)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider splitting complex checks into multiple steps",
      "description": "Assign the individual expression operations to intermediate local variables, and check against those instead.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Refactor sub-expressions into variables\n 726 |  return (_tokenOut == address(_asset) || _tokenOut == address(this)) && _liquidationPair == liquidationPair;\n```",
          "loc": [
            "[726](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L726)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider upgrading OpenZeppelin dependency to a newer version",
      "description": "The following dependencies can be updated to the versions specified noted.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\"\n   4 |  import { IERC4626 } from \"openzeppelin/interfaces/IERC4626.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.3 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\"\n   5 |  import { SafeERC20, IERC20Permit } from \"openzeppelin/token/ERC20/utils/SafeERC20.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\"\n   6 |  import { ERC20, IERC20, IERC20Metadata } from \"openzeppelin/token/ERC20/ERC20.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\"\n   7 |  import { Math } from \"openzeppelin/utils/math/Math.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L6)",
            "[7](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L7)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC4626.sol)\"\n   4 |  import { IERC20, IERC4626 } from \"openzeppelin/token/ERC20/extensions/ERC4626.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\"\n   4 |  import { ERC20 } from \"openzeppelin/token/ERC20/ERC20.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.4 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\"\n   5 |  import { ERC20Permit } from \"openzeppelin/token/ERC20/extensions/ERC20Permit.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.8.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\"\n   6 |  import { SafeCast } from \"openzeppelin/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L6)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using descriptive `constant`s when passing zero as a function argument",
      "description": "Passing `0` or `0x0` as a function argument can sometimes result in a security issue(e.g. passing zero as the slippage parameter). A historical example is the infamous `0x0` address bug where numerous tokens were lost. This happens because `0` can be interpreted as an uninitialized `address`, leading to transfers to the `0x0` `address`, effectively burning tokens. Moreover, `0` as a denominator in division operations would cause a runtime exception. It's also often indicative of a logical error in the caller's code.\r\n\r\nConsider using a constant variable with a descriptive name, so it's clear that the argument is intentionally being used, and for the right reasons.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Replace literal 0 with an explicit constant\n 869 |  _asset.approve(address(yieldVault), 0);\n```",
          "loc": [
            "[869](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L869)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named function arguments",
      "description": "Named function calls in Solidity greatly improve code readability by explicitly mapping arguments to their respective parameter names. This clarity becomes critical when dealing with functions that have numerous or complex parameters, reducing potential errors due to misordered arguments. Therefore, adopting named function calls contributes to more maintainable and less error-prone code. The following findings are for function calls with 4 or more praameters.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider named parameters\n 477 |  _depositAndMint(msg.sender, _receiver, _assets, _shares);\n\n     |  // @audit-issue Consider named parameters\n 484 |  _depositAndMint(msg.sender, _receiver, _assets, _shares);\n\n     |  // @audit-issue Consider named parameters\n 495 |  _burnAndWithdraw(msg.sender, _receiver, _owner, _shares, _assets);\n\n     |  // @audit-issue Consider named parameters\n 506 |  _burnAndWithdraw(msg.sender, _receiver, _owner, _shares, _assets);\n\n     |  // @audit-issue Consider named parameters\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n\n     |  // @audit-issue Consider named parameters\n 544 |  _depositAndMint(_owner, _owner, _assets, _shares);\n\n     |  // @audit-issue Consider named parameters\n 556 |  _depositAndMint(_owner, _owner, _assets, _shares);\n\n     |  // @audit-issue Consider named parameters\n 697 |  emit TransferYieldOut(msg.sender, _tokenOut, _receiver, _amountOut, _yieldFee);\n\n     |  // @audit-issue Consider named parameters\n 876 |  emit Deposit(_caller, _receiver, _assets, _shares);\n\n     |  // @audit-issue Consider named parameters\n 909 |  emit Withdraw(_caller, _receiver, _owner, _assets, _shares);\n```",
          "loc": [
            "[477](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L477)",
            "[484](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L484)",
            "[495](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L495)",
            "[506](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L506)",
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)",
            "[544](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L544)",
            "[556](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L556)",
            "[697](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L697)",
            "[876](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L876)",
            "[909](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L909)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider named parameters\n 123 |  emit NewPrizeVault(\n 124 |      _vault,\n 125 |      _yieldVault,\n 126 |      _prizePool,\n 127 |      _name,\n 128 |      _symbol\n 129 |  );\n```",
          "loc": [
            "[123-129](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L123-L129)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider named parameters\n  99 |  uint256 prizeTotal = prizePool.claimPrize(\n 100 |      _winner,\n 101 |      _tier,\n 102 |      _prizeIndex,\n 103 |      recipient,\n 104 |      _reward,\n 105 |      _rewardRecipient\n 106 |  );\n```",
          "loc": [
            "[99-106](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L99-L106)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using named mappings",
      "description": "Consider using [named mappings](https://ethereum.stackexchange.com/a/145555) to make it easier to understand the purpose of each mapping (requires Solidity 0.8.18 or later).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Name the key/value in this mapping\n  17 |  mapping(address => VaultHooks) internal _hooks;\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Consider using the `using`-`for` syntax",
      "description": "The `using`-`for` [syntax](https://docs.soliditylang.org/en/latest/contracts.html#using-for) is the more common way of calling library functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  77 |  twabController.mint(_receiver, SafeCast.toUint96(_amount));\n\n  88 |  twabController.burn(_owner, SafeCast.toUint96(_amount));\n\n 101 |  twabController.transfer(_from, _to, SafeCast.toUint96(_amount));\n```",
          "loc": [
            "[77](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L77)",
            "[88](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L88)",
            "[101](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L101)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Constructor / initialization function lacks parameter validation",
      "description": "Constructors and initialization functions play a critical role in contracts by setting important initial states when the contract is first deployed before the system starts. The parameters passed to the constructor and initialization functions directly affect the behavior of the contract / protocol. If incorrect parameters are provided, the system may fail to run, behave abnormally, be unstable, or lack security. Therefore, it's crucial to carefully check each parameter in the constructor and initialization functions. If an exception is found, the transaction should be rolled back.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue `yieldBuffer_` is assigned to a state variable, unvalidated\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n```",
          "loc": [
            "[289-299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L289-L299)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract order does not follow Solidity style guide recommendations",
      "description": "This is a [best practice](https://docs.soliditylang.org/en/latest/style-guide.html#order-of-layout) that should be followed.\r\n\r\nInside each contract, library or interface, use the following order:\r\n\r\n> 1. Type declarations\r\n> 2. State variables\r\n> 3. Events\r\n> 4. Errors\r\n> 5. Modifiers\r\n> 6. Functions\r\n\r\nNote that the recommendations here only cover the top-level ordering. Within, e.g. variables and functions, additional ordering rules will apply, but are covered by other findings.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-info Contract component order has style violations; recommended top-level order:\n     |  // variable YIELD_BUFFER\n     |  // variable allVaults\n     |  // variable deployedVaults\n     |  // variable deployerNonces\n     |  // event NewPrizeVault\n     |  // function deployVault\n     |  // function totalVaults\n  13 |  contract PrizeVaultFactory {\n  :  |\n     |      // @audit-issue variable YIELD_BUFFER should come before event NewPrizeVault\n  63 |      uint256 public constant YIELD_BUFFER = 1e5;\n```",
          "loc": [
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-info Contract component order has style violations; recommended top-level order:\n     |  // variable _hooks\n     |  // event SetHooks\n     |  // function getHooks\n     |  // function setHooks\n   9 |  abstract contract HookManager {\n  :  |\n     |      // @audit-issue variable _hooks should come before event SetHooks\n  17 |      mapping(address => VaultHooks) internal _hooks;\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contract should expose an `interface`",
      "description": "The `contract`s should expose an `interface` so that other projects can more easily integrate with it, without having to develop their own non-standard variants.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider defining an interface for this contract\n  13 |  contract PrizeVaultFactory {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider defining an interface for this contract\n  19 |  contract TwabERC20 is ERC20, ERC20Permit {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Consider defining an interface for this contract\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts and libraries should use fixed compiler versions",
      "description": "To prevent the actual contracts being deployed from behaving differently depending on the compiler version, it is recommended to use fixed solidity versions for contracts and libraries.\r\n\r\nAlthough we can configure a specific version through config (like hardhat, forge config files), it is recommended to **set the fixed version in the solidity pragma directly** before deploying to the mainnet.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Contracts should have full test coverage",
      "description": "While 100% code coverage does not guarantee that there are no bugs, it often will catch easy-to-find bugs, and will ensure that there are fewer regressions when the code invariably has to be modified. Furthermore, in order to get full coverage, code authors will often have to re-organize their code so that it is more modular, so that each component can be tested separately, which reduces interdependencies between modules and layers, and makes for code that is easier to reason about and audit.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Test coverage for this file was < 100%\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Test coverage for this file was < 100%\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Test coverage for this file was < 100%\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Test coverage for this file was < 100%\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Test coverage for this file was < 100%\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Test coverage for this file was < 100%\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L1)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Critical system parameter changes should be behind a timelock",
      "description": "Admin functions that change state should consider adding timelocks so that users and other privileged roles can be notified of and react to upcoming changes. Also, this protects users against a compromised/malicious admin account.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add a timelock to the parameter change\n 735 |  function setClaimer(address _claimer) external onlyOwner {\n 736 |      _setClaimer(_claimer);\n 737 |  }\n\n     |  // @audit-issue Add a timelock to the parameter change\n 742 |      function setLiquidationPair(address _liquidationPair) external onlyOwner {\n 743 |          if (address(_liquidationPair) == address(0)) revert LPZeroAddress();\n 745 |          liquidationPair = _liquidationPair;\n 747 |          emit LiquidationPairSet(address(this), address(_liquidationPair));\n 748 |      }\n\n     |  // @audit-issue Add a timelock to the parameter change\n 753 |  function setYieldFeePercentage(uint32 _yieldFeePercentage) external onlyOwner {\n 754 |      _setYieldFeePercentage(_yieldFeePercentage);\n 755 |  }\n\n     |  // @audit-issue Add a timelock to the parameter change\n 759 |  function setYieldFeeRecipient(address _yieldFeeRecipient) external onlyOwner {\n 760 |      _setYieldFeeRecipient(_yieldFeeRecipient);\n 761 |  }\n```",
          "loc": [
            "[735-737](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L735-L737)",
            "[742-748](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L742-L748)",
            "[753-755](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L753-L755)",
            "[759-761](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L759-L761)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Custom error has no error details",
      "description": "Consider adding parameters to the error to indicate which user or values caused the failure",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 182 |  error YieldVaultZeroAddress();\n\n 185 |  error OwnerZeroAddress();\n\n 188 |  error WithdrawZeroAssets();\n\n 191 |  error BurnZeroShares();\n\n 194 |  error DepositZeroAssets();\n\n 197 |  error MintZeroShares();\n\n 200 |  error ZeroTotalAssets();\n\n 203 |  error LPZeroAddress();\n\n 206 |  error SweepZeroAssets();\n\n 209 |  error LiquidationAmountOutZero();\n```",
          "loc": [
            "[182](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L182)",
            "[185](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L185)",
            "[188](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L188)",
            "[191](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L191)",
            "[194](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L194)",
            "[197](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L197)",
            "[200](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L200)",
            "[203](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L203)",
            "[206](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L206)",
            "[209](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L209)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  33 |  error TwabControllerZeroAddress();\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  34 |  error PrizePoolZeroAddress();\n\n  37 |  error ClaimerZeroAddress();\n\n  40 |  error ClaimRecipientZeroAddress();\n```",
          "loc": [
            "[34](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L34)",
            "[37](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L37)",
            "[40](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L40)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Duplicate `require()`/`revert()` checks should be refactored to a modifier or function",
      "description": "The compiler will inline the function, which will avoid `JUMP` instructions usually associated with functions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Duplicates of this conditional revert statement were detected\n 612 |  if (_shares == 0) revert MintZeroShares();\n  :  |\n     |  // @audit-issue First seen at pt-v5-vault/src/PrizeVault.sol:612\n 844 |  if (_shares == 0) revert MintZeroShares();\n```",
          "loc": [
            "[844](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L844)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events are missing sender information",
      "description": "When an action is triggered based on a user's action, not being able to filter based on who triggered the action makes event processing a lot more cumbersome. Including the `msg.sender` the events of these types of action will make events much more useful to end users, especially when `msg.sender` is not `tx.origin`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 562 |  emit Sponsor(_owner, _assets, _shares);\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 747 |  emit LiquidationPairSet(address(this), address(_liquidationPair));\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 876 |  emit Deposit(_caller, _receiver, _assets, _shares);\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 909 |  emit Withdraw(_caller, _receiver, _owner, _assets, _shares);\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 952 |  emit YieldFeePercentageSet(_yieldFeePercentage);\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 960 |  emit YieldFeeRecipientSet(_yieldFeeRecipient);\n```",
          "loc": [
            "[562](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L562)",
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)",
            "[876](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L876)",
            "[909](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L909)",
            "[952](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L952)",
            "[960](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L960)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 123 |  emit NewPrizeVault(\n 124 |      _vault,\n 125 |      _yieldVault,\n 126 |      _prizePool,\n 127 |      _name,\n 128 |      _symbol\n 129 |  );\n```",
          "loc": [
            "[123-129](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L123-L129)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n  78 |  emit Transfer(address(0), _receiver, _amount);\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n  89 |  emit Transfer(_owner, address(0), _amount);\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 102 |  emit Transfer(_from, _to, _amount);\n```",
          "loc": [
            "[78](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L78)",
            "[89](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L89)",
            "[102](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L102)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider adding msg.sender as a parameter\n 131 |  emit ClaimerSet(_claimer);\n```",
          "loc": [
            "[131](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L131)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Events that mark critical parameter changes should contain both the old and the new value",
      "description": "This should especially be done if the new value is not required to be different from the old value",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info setter/update\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n  :  |\n     |      // @audit-issue Consider including 'old' parameters in emit\n 747 |      emit LiquidationPairSet(address(this), address(_liquidationPair));\n\n     |  // @audit-info setter/update\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n  :  |\n     |      // @audit-issue Consider including 'old' parameters in emit\n 952 |      emit YieldFeePercentageSet(_yieldFeePercentage);\n\n     |  // @audit-info setter/update\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n  :  |\n     |      // @audit-issue Consider including 'old' parameters in emit\n 960 |      emit YieldFeeRecipientSet(_yieldFeeRecipient);\n```",
          "loc": [
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)",
            "[952](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L952)",
            "[960](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L960)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info setter/update\n 128 |  function _setClaimer(address _claimer) internal {\n  :  |\n     |      // @audit-issue Consider including 'old' parameters in emit\n 131 |      emit ClaimerSet(_claimer);\n```",
          "loc": [
            "[131](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L131)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-info setter/update\n  29 |  function setHooks(VaultHooks calldata hooks) external {\n  :  |\n     |      // @audit-issue Consider including 'old' parameters in emit\n  31 |      emit SetHooks(msg.sender, hooks);\n```",
          "loc": [
            "[31](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L31)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Function ordering does not follow the Solidity style guide",
      "description": "According to the [Solidity style guide](https://docs.soliditylang.org/en/v0.8.17/style-guide.html#order-of-functions), functions should be laid out in the following order :`constructor()`, `receive()`, `fallback()`, `external`, `public`, `internal`, `private`, but the cases below do not follow this pattern.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Contract node order has style violations; recommended order is:\n     |  // constructor ()\n     |  // external asset()\n     |  // external deposit()\n     |  // external mint()\n     |  // external withdraw()\n     |  // external redeem()\n     |  // external depositWithPermit()\n     |  // external sponsor()\n     |  // external currentYieldBuffer()\n     |  // external claimYieldFeeShares()\n     |  // external verifyTokensIn()\n     |  // external targetOf()\n     |  // external isLiquidationPair()\n     |  // external setClaimer()\n     |  // external setLiquidationPair()\n     |  // external setYieldFeePercentage()\n     |  // external setYieldFeeRecipient()\n     |  // public decimals()\n     |  // public totalAssets()\n     |  // public convertToShares()\n     |  // public convertToAssets()\n     |  // public maxDeposit()\n     |  // public maxMint()\n     |  // public maxWithdraw()\n     |  // public maxRedeem()\n     |  // public previewDeposit()\n     |  // public previewMint()\n     |  // public previewWithdraw()\n     |  // public previewRedeem()\n     |  // public totalDebt()\n     |  // public totalYieldBalance()\n     |  // public availableYieldBalance()\n     |  // public liquidatableBalanceOf()\n     |  // public transferTokensOut()\n     |  // internal _tryGetAssetDecimals()\n     |  // internal _totalDebt()\n     |  // internal _twabSupplyLimit()\n     |  // internal _totalYieldBalance()\n     |  // internal _availableYieldBalance()\n     |  // internal _depositAndMint()\n     |  // internal _burnAndWithdraw()\n     |  // internal _maxYieldVaultWithdraw()\n     |  // internal _withdraw()\n     |  // internal _setYieldFeePercentage()\n     |  // internal _setYieldFeeRecipient()\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n  :  |\n     |      // @audit-issue external asset() should be above public decimals()\n 329 |      function asset() external view returns (address) {\n  :  |\n     |      // @audit-issue external deposit() should be above public previewRedeem()\n 475 |      function deposit(uint256 _assets, address _receiver) external returns (uint256) {\n  :  |\n     |      // @audit-issue external currentYieldBuffer() should be above public availableYieldBalance()\n 597 |      function currentYieldBuffer() external view returns (uint256) {\n  :  |\n     |      // @audit-issue external verifyTokensIn() should be above public transferTokensOut()\n 703 |      function verifyTokensIn(\n 704 |          address _tokenIn,\n 705 |          uint256 _amountIn,\n 706 |          bytes calldata\n 707 |      ) external onlyLiquidationPair {\n```",
          "loc": [
            "[329](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L329)",
            "[475](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L475)",
            "[597](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L597)",
            "[703-707](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L703-L707)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "High cyclomatic complexity",
      "description": "Cyclomatic complexity is a quantitative measure of the number of linearly independent paths through a program's source code:\r\n                \r\n| Cyclomatic Complexity | Interpretation | Recommendation |\r\n| - | - | - |\r\n| 1..9 | ðŸŸ¢ Low complexity | Acceptable |\r\n| 10..19 | ðŸŸ¡ Moderate complexity | Careful testing and documentation |\r\n| 20..29 | ðŸŸ  High complexity | Candidate for refactoring |\r\n| 30+ | â›” Very high complexity | At high risk of errors |\r\n\r\nThe following functions have a moderate or higher complexity i.e. 10 or more decision points. Consider breaking down these functions into more manageable units, by splitting things into utility functions, by reducing nesting, and by using early returns.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue This function has a cyclomatic complexity of 13\n 659 |      function transferTokensOut(\n 660 |          address,\n 661 |          address _receiver,\n 662 |          address _tokenOut,\n 663 |          uint256 _amountOut\n 664 |      ) public virtual onlyLiquidationPair returns (bytes memory) {\n 665 |          if (_amountOut == 0) revert LiquidationAmountOutZero();\n 667 |          uint256 _availableYield = availableYieldBalance();\n 668 |          uint32 _yieldFeePercentage = yieldFeePercentage;\n 670 |          // Determine the proportional yield fee based on the amount being liquidated:\n 671 |          uint256 _yieldFee;\n 672 |          if (_yieldFeePercentage != 0) {\n 673 |              // The yield fee is calculated as a portion of the total yield being consumed, such that \n 674 |              // `total = amountOut + yieldFee` and `yieldFee / total = yieldFeePercentage`. \n 675 |              _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n 676 |          }\n 678 |          // Ensure total liquidation amount does not exceed the available yield balance:\n 679 |          if (_amountOut + _yieldFee > _availableYield) {\n 680 |              revert LiquidationExceedsAvailable(_amountOut + _yieldFee, _availableYield);\n 681 |          }\n 683 |          // Increase yield fee balance:\n 684 |          if (_yieldFee > 0) {\n 685 |              yieldFeeBalance += _yieldFee;\n 686 |          }\n 688 |          // Mint or withdraw amountOut to `_receiver`:\n 689 |          if (_tokenOut == address(_asset)) {\n 690 |              _withdraw(_receiver, _amountOut);            \n 691 |          } else if (_tokenOut == address(this)) {\n 692 |              _mint(_receiver, _amountOut);\n 693 |          } else {\n 694 |              revert LiquidationTokenOutNotSupported(_tokenOut);\n 695 |          }\n 697 |          emit TransferYieldOut(msg.sender, _tokenOut, _receiver, _amountOut, _yieldFee);\n 699 |          return \"\";\n 700 |      }\n```",
          "loc": [
            "[659-700](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L700)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Imports should be organized more systematically",
      "description": "The contract's interface should be imported first, followed by each of the interfaces it uses, followed by all other files. The examples below do not follow this layout.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Import contract interface > other interfaces > project files > external files\n   5 |  import { SafeERC20, IERC20Permit } from \"openzeppelin/token/ERC20/utils/SafeERC20.sol\";\n\n     |  // @audit-issue Import contract interface > other interfaces > project files > external files\n   6 |  import { ERC20, IERC20, IERC20Metadata } from \"openzeppelin/token/ERC20/ERC20.sol\";\n```",
          "loc": [
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L6)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large multiples of ten should use scientific notation for readability",
      "description": "Use a scientific notation rather than decimal literals (e.g. `1e6` instead of `1000000`, `5e3` instead of `5000`), for better code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Use scientific notation (e.g. 1e18) instead\n  21 |  uint24 public constant HOOK_GAS = 150_000;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Large or complicated code bases should implement invariant tests",
      "description": "This includes: large code bases, or code with lots of inline-assembly, complicated math, or complicated interactions between multiple contracts.\r\n\r\nInvariant fuzzers such as Echidna require the test writer to come up with invariants which should not be violated under any circumstances, and the fuzzer tests various inputs and function calls to ensure that the invariants always hold.\r\n\r\nEven code with 100% code coverage can still have bugs due to the order of the operations a user performs, and invariant fuzzers may help significantly.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Invariant tests were not detected for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Invariant tests were not detected for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Invariant tests were not detected for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Invariant tests were not detected for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Invariant tests were not detected for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Invariant tests were not detected for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L1)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Naming: name immutables using all-uppercase",
      "description": "Immutables should be in uppercase as stated [Solidity style guide](https://docs.soliditylang.org/en/latest/style-guide.html#constants).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Names of immutable variables should be in all uppercase\n 112 |  uint256 public immutable yieldBuffer;\n\n     |  // @audit-issue Names of immutable variables should be in all uppercase\n 115 |  IERC4626 public immutable yieldVault;\n\n     |  // @audit-issue Names of immutable variables should be in all uppercase\n 135 |  IERC20 private immutable _asset;\n\n     |  // @audit-issue Names of immutable variables should be in all uppercase\n 138 |  uint8 private immutable _underlyingDecimals;\n```",
          "loc": [
            "[112](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L112)",
            "[115](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L115)",
            "[135](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L135)",
            "[138](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L138)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Names of immutable variables should be in all uppercase\n  26 |  TwabController public immutable twabController;\n```",
          "loc": [
            "[26](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Names of immutable variables should be in all uppercase\n  24 |  PrizePool public immutable prizePool;\n```",
          "loc": [
            "[24](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L24)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Contract declarations should have `@dev` tags",
      "description": "`@dev` is used to explain extra details to developers",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  13 |  contract PrizeVaultFactory {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  13 |  abstract contract Claimable is HookManager, IClaimable {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Add NatSpec @dev\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  17 |  interface IVaultHooks {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Error definitions should have `@dev` tags",
      "description": "`@dev` is used to explain to developers what the error does, and the compiler interprets `///` or `/**` comments as this tag if one wasn't explicitly provided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec @dev\n 182 |  error YieldVaultZeroAddress();\n\n     |  // @audit-issue Add NatSpec @dev\n 185 |  error OwnerZeroAddress();\n\n     |  // @audit-issue Add NatSpec @dev\n 188 |  error WithdrawZeroAssets();\n\n     |  // @audit-issue Add NatSpec @dev\n 191 |  error BurnZeroShares();\n\n     |  // @audit-issue Add NatSpec @dev\n 194 |  error DepositZeroAssets();\n\n     |  // @audit-issue Add NatSpec @dev\n 197 |  error MintZeroShares();\n\n     |  // @audit-issue Add NatSpec @dev\n 200 |  error ZeroTotalAssets();\n\n     |  // @audit-issue Add NatSpec @dev\n 203 |  error LPZeroAddress();\n\n     |  // @audit-issue Add NatSpec @dev\n 206 |  error SweepZeroAssets();\n\n     |  // @audit-issue Add NatSpec @dev\n 209 |  error LiquidationAmountOutZero();\n\n     |  // @audit-issue Add NatSpec @dev\n 214 |  error CallerNotLP(address caller, address liquidationPair);\n\n     |  // @audit-issue Add NatSpec @dev\n 219 |  error CallerNotYieldFeeRecipient(address caller, address yieldFeeRecipient);\n\n     |  // @audit-issue Add NatSpec @dev\n 224 |  error PermitCallerNotOwner(address caller, address owner);\n\n     |  // @audit-issue Add NatSpec @dev\n 229 |  error YieldFeePercentageExceedsMax(uint256 yieldFeePercentage, uint256 maxYieldFeePercentage);\n\n     |  // @audit-issue Add NatSpec @dev\n 234 |  error SharesExceedsYieldFeeBalance(uint256 shares, uint256 yieldFeeBalance);\n\n     |  // @audit-issue Add NatSpec @dev\n 239 |  error LiquidationTokenInNotPrizeToken(address tokenIn, address prizeToken);\n\n     |  // @audit-issue Add NatSpec @dev\n 243 |  error LiquidationTokenOutNotSupported(address tokenOut);\n\n     |  // @audit-issue Add NatSpec @dev\n 248 |  error LiquidationExceedsAvailable(uint256 totalToWithdraw, uint256 availableYield);\n\n     |  // @audit-issue Add NatSpec @dev\n 253 |  error LossyDeposit(uint256 totalAssets, uint256 totalSupply);\n```",
          "loc": [
            "[182](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L182)",
            "[185](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L185)",
            "[188](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L188)",
            "[191](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L191)",
            "[194](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L194)",
            "[197](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L197)",
            "[200](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L200)",
            "[203](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L203)",
            "[206](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L206)",
            "[209](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L209)",
            "[214](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L214)",
            "[219](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L219)",
            "[224](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L224)",
            "[229](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L229)",
            "[234](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L234)",
            "[239](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L239)",
            "[243](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L243)",
            "[248](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L248)",
            "[253](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L253)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  33 |  error TwabControllerZeroAddress();\n```",
          "loc": [
            "[33](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L33)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  34 |  error PrizePoolZeroAddress();\n\n     |  // @audit-issue Add NatSpec @dev\n  37 |  error ClaimerZeroAddress();\n\n     |  // @audit-issue Add NatSpec @dev\n  40 |  error ClaimRecipientZeroAddress();\n\n     |  // @audit-issue Add NatSpec @dev\n  45 |  error CallerNotClaimer(address caller, address claimer);\n```",
          "loc": [
            "[34](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L34)",
            "[37](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L37)",
            "[40](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L40)",
            "[45](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L45)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Event definitions should have `@dev` tags",
      "description": "`@dev` is used to explain to developers what the event does, as per [NatSpec Format](https://docs.soliditylang.org/en/latest/natspec-format.html#tags).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec @dev\n 146 |  event YieldFeeRecipientSet(address indexed yieldFeeRecipient);\n\n     |  // @audit-issue Add NatSpec @dev\n 150 |  event YieldFeePercentageSet(uint256 yieldFeePercentage);\n\n     |  // @audit-issue Add NatSpec @dev\n 156 |  event Sponsor(address indexed caller, uint256 assets, uint256 shares);\n\n     |  // @audit-issue Add NatSpec @dev\n 164 |  event TransferYieldOut(\n\n     |  // @audit-issue Add NatSpec @dev\n 175 |  event ClaimYieldFeeShares(address indexed recipient, uint256 shares);\n```",
          "loc": [
            "[146](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L146)",
            "[150](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L150)",
            "[156](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L156)",
            "[164](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L164)",
            "[175](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L175)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  25 |  event NewPrizeVault(\n```",
          "loc": [
            "[25](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L25)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  14 |  event SetHooks(address indexed account, VaultHooks hooks);\n```",
          "loc": [
            "[14](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L14)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function `@param` is missing",
      "description": "Documentation of all function parameters improves code readability.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Missing NatSpec @param for parameter 3 contract TwabController twabController_\n  45 |  TwabController twabController_\n```",
          "loc": [
            "[45](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L45)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function definitions should have `@dev` tags",
      "description": "`@dev` is used to explain to developers what the function does, as per [NatSpec Format](https://docs.soliditylang.org/en/latest/natspec-format.html#tags).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec @dev\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n\n     |  // @audit-issue Add NatSpec @dev\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n\n     |  // @audit-issue Add NatSpec @dev\n 329 |  function asset() external view returns (address) {\n\n     |  // @audit-issue Add NatSpec @dev\n 341 |  function convertToShares(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 355 |  function convertToAssets(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 441 |  function previewDeposit(uint256 _assets) public pure returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 447 |  function previewMint(uint256 _shares) public pure returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 470 |  function previewRedeem(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 475 |  function deposit(uint256 _assets, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 482 |  function mint(uint256 _shares, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 489 |  function withdraw(\n 490 |      uint256 _assets,\n 491 |      address _receiver,\n 492 |      address _owner\n 493 |  ) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 500 |  function redeem(\n 501 |      uint256 _shares,\n 502 |      address _receiver,\n 503 |      address _owner\n 504 |  ) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 573 |  function totalDebt() public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 597 |  function currentYieldBuffer() external view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 703 |  function verifyTokensIn(\n 704 |      address _tokenIn,\n 705 |      uint256 _amountIn,\n 706 |      bytes calldata\n 707 |  ) external onlyLiquidationPair {\n\n     |  // @audit-issue Add NatSpec @dev\n 717 |  function targetOf(address) external view returns (address) {\n\n     |  // @audit-issue Add NatSpec @dev\n 722 |  function isLiquidationPair(\n 723 |      address _tokenOut,\n 724 |      address _liquidationPair\n 725 |  ) external view returns (bool) {\n\n     |  // @audit-issue Add NatSpec @dev\n 735 |  function setClaimer(address _claimer) external onlyOwner {\n\n     |  // @audit-issue Add NatSpec @dev\n 759 |  function setYieldFeeRecipient(address _yieldFeeRecipient) external onlyOwner {\n\n     |  // @audit-issue Add NatSpec @dev\n 808 |  function _totalYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal pure returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n 928 |  function _withdraw(address _receiver, uint256 _assets) internal {\n```",
          "loc": [
            "[289-299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L289-L299)",
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[329](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L329)",
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[355](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L355)",
            "[441](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L441)",
            "[447](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L447)",
            "[470](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L470)",
            "[475](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L475)",
            "[482](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L482)",
            "[489-493](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L489-L493)",
            "[500-504](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L500-L504)",
            "[573](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L573)",
            "[597](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L597)",
            "[703-707](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L703-L707)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)",
            "[722-725](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L722-L725)",
            "[735](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L735)",
            "[759](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L759)",
            "[808](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L808)",
            "[928](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L928)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Add NatSpec @dev\n 136 |  function totalVaults() external view returns (uint256) {\n```",
          "loc": [
            "[136](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L136)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  42 |  constructor(\n  43 |      string memory name_,\n  44 |      string memory symbol_,\n  45 |      TwabController twabController_\n  46 |  ) ERC20(name_, symbol_) ERC20Permit(name_) {\n\n     |  // @audit-issue Add NatSpec @dev\n  56 |  function balanceOf(\n  57 |      address _account\n  58 |  ) public view virtual override(ERC20) returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @dev\n  63 |  function totalSupply() public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[42-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L42-L46)",
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  22 |  function getHooks(address account) external view returns (VaultHooks memory) {\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L22)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  26 |  function beforeClaimPrize(\n  27 |      address winner,\n  28 |      uint8 tier,\n  29 |      uint32 prizeIndex,\n  30 |      uint96 reward,\n  31 |      address rewardRecipient\n  32 |  ) external returns (address);\n\n     |  // @audit-issue Add NatSpec @dev\n  40 |  function afterClaimPrize(\n  41 |      address winner,\n  42 |      uint8 tier,\n  43 |      uint32 prizeIndex,\n  44 |      uint256 prize,\n  45 |      address recipient\n  46 |  ) external;\n```",
          "loc": [
            "[26-32](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L26-L32)",
            "[40-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L40-L46)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Function definitions should have `@notice` tags",
      "description": "`@notice` is used to explain to end users what the function does, and the compiler interprets `///` or `/**` comments as this tag if one wasn't explicitly provided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec @notice\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n\n     |  // @audit-issue Add NatSpec @notice\n 329 |  function asset() external view returns (address) {\n\n     |  // @audit-issue Add NatSpec @notice\n 336 |  function totalAssets() public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 341 |  function convertToShares(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 355 |  function convertToAssets(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 374 |  function maxDeposit(address) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 397 |  function maxMint(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 404 |  function maxWithdraw(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 415 |  function maxRedeem(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 441 |  function previewDeposit(uint256 _assets) public pure returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 447 |  function previewMint(uint256 _shares) public pure returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 454 |  function previewWithdraw(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 470 |  function previewRedeem(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 475 |  function deposit(uint256 _assets, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 482 |  function mint(uint256 _shares, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 489 |  function withdraw(\n 490 |      uint256 _assets,\n 491 |      address _receiver,\n 492 |      address _owner\n 493 |  ) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 500 |  function redeem(\n 501 |      uint256 _shares,\n 502 |      address _receiver,\n 503 |      address _owner\n 504 |  ) external returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 631 |  function liquidatableBalanceOf(address _tokenOut) public view returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n 659 |  function transferTokensOut(\n 660 |      address,\n 661 |      address _receiver,\n 662 |      address _tokenOut,\n 663 |      uint256 _amountOut\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n\n     |  // @audit-issue Add NatSpec @notice\n 703 |  function verifyTokensIn(\n 704 |      address _tokenIn,\n 705 |      uint256 _amountIn,\n 706 |      bytes calldata\n 707 |  ) external onlyLiquidationPair {\n\n     |  // @audit-issue Add NatSpec @notice\n 717 |  function targetOf(address) external view returns (address) {\n\n     |  // @audit-issue Add NatSpec @notice\n 722 |  function isLiquidationPair(\n 723 |      address _tokenOut,\n 724 |      address _liquidationPair\n 725 |  ) external view returns (bool) {\n```",
          "loc": [
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[329](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L329)",
            "[336](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L336)",
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[355](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L355)",
            "[374](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L374)",
            "[397](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L397)",
            "[404](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L404)",
            "[415](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L415)",
            "[441](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L441)",
            "[447](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L447)",
            "[454](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L454)",
            "[470](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L470)",
            "[475](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L475)",
            "[482](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L482)",
            "[489-493](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L489-L493)",
            "[500-504](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L500-L504)",
            "[631](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L631)",
            "[659-664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L664)",
            "[703-707](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L703-L707)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)",
            "[722-725](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L722-L725)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Add NatSpec @notice\n  56 |  function balanceOf(\n  57 |      address _account\n  58 |  ) public view virtual override(ERC20) returns (uint256) {\n\n     |  // @audit-issue Add NatSpec @notice\n  63 |  function totalSupply() public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Add NatSpec @notice\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[76-82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L76-L82)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Modifier definitions should have `@dev` tags",
      "description": "`@dev` is used to explain to developers what the modifier does, and the compiler interprets `///` or `/**` comments as this tag if one wasn't explicitly provided.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec @dev\n 260 |  modifier onlyLiquidationPair() {\n 261 |      if (msg.sender != liquidationPair) {\n 262 |          revert CallerNotLP(msg.sender, liquidationPair);\n 263 |      }\n 264 |      _;\n 265 |  }\n\n     |  // @audit-issue Add NatSpec @dev\n 268 |  modifier onlyYieldFeeRecipient() {\n 269 |      if (msg.sender != yieldFeeRecipient) {\n 270 |          revert CallerNotYieldFeeRecipient(msg.sender, yieldFeeRecipient);\n 271 |      }\n 272 |      _;\n 273 |  }\n```",
          "loc": [
            "[260-265](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L260-L265)",
            "[268-273](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L268-L273)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Add NatSpec @dev\n  52 |  modifier onlyClaimer() {\n  53 |      if (msg.sender != claimer) revert CallerNotClaimer(msg.sender, claimer);\n  54 |      _;\n  55 |  }\n```",
          "loc": [
            "[52-55](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L52-L55)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: Non-public state variable declarations should use `@dev` tags",
      "description": "As per [Solidity NatSpec](https://docs.soliditylang.org/en/latest/natspec-format.html#tags). Note: public and non-public state variables should have a @dev tag. Only public state variables should have a @notice tag.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec @dev documentation\n 135 |  IERC20 private immutable _asset;\n\n     |  // @audit-issue Add NatSpec @dev documentation\n 138 |  uint8 private immutable _underlyingDecimals;\n```",
          "loc": [
            "[135](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L135)",
            "[138](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L138)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Add NatSpec @dev documentation\n  17 |  mapping(address => VaultHooks) internal _hooks;\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "NatSpec: missing from file",
      "description": "As per the [Solidity Style Guide](https://docs.soliditylang.org/en/v0.8.22/style-guide.html#natspec):\r\n\r\n        >  They are written with a triple slash (///) or a double asterisk block (/** ... */) and they should be used directly above function declarations or statements.\r\n\r\n        Files with no NatSpec documentation are more difficult to use and review.\r\n        ",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Add NatSpec comments to this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Add NatSpec comments to this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Add NatSpec comments to this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Add NatSpec comments to this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Add NatSpec comments to this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Add NatSpec comments to this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L1)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Parameter change does not emit event",
      "description": "Events help non-contract tools to track changes, and events prevent users from being surprised by changes",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider emitting an event documenting the parameter change\n 735 |  function setClaimer(address _claimer) external onlyOwner {\n\n     |  // @audit-issue Consider emitting an event documenting the parameter change\n 753 |  function setYieldFeePercentage(uint32 _yieldFeePercentage) external onlyOwner {\n\n     |  // @audit-issue Consider emitting an event documenting the parameter change\n 759 |  function setYieldFeeRecipient(address _yieldFeeRecipient) external onlyOwner {\n```",
          "loc": [
            "[735](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L735)",
            "[753](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L753)",
            "[759](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L759)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Redundant `else` block",
      "description": "One level of nesting can be removed by not having an else block when the if-block returns.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue The else clause is unnecessary\n 344 |  if (_totalAssets >= totalDebt_) {\n 345 |      return _assets;\n 346 |  } else {\n 347 |      // If the vault controls less assets than what has been deposited a share will be worth a\n 348 |      // proportional amount of the total assets. This can happen due to fees, slippage, or loss\n 349 |      // of funds in the underlying yield vault.\n 350 |      return _assets.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Down);\n 351 |  }\n\n     |  // @audit-issue The else clause is unnecessary\n 358 |  if (_totalAssets >= totalDebt_) {\n 359 |      return _shares;\n 360 |  } else {\n 361 |      // If the vault controls less assets than what has been deposited a share will be worth a\n 362 |      // proportional amount of the total assets. This can happen due to fees, slippage, or loss\n 363 |      // of funds in the underlying yield vault.\n 364 |      return _shares.mulDiv(_totalAssets, totalDebt_, Math.Rounding.Down);\n 365 |  }\n\n     |  // @audit-issue The else clause is unnecessary\n 384 |  if (_latentBalance >= _maxYieldVaultDeposit) {\n 385 |      return 0;\n 386 |  } else {\n 387 |      unchecked {\n 388 |          _maxDeposit = _maxYieldVaultDeposit - _latentBalance;\n 389 |      }\n 390 |      return twabSupplyLimit_ < _maxDeposit ? twabSupplyLimit_ : _maxDeposit;\n 391 |  }\n\n     |  // @audit-issue The else clause is unnecessary\n 425 |  if (_totalAssets >= totalDebt_) {\n 426 |      return _maxWithdraw;\n 427 |  } else {\n 428 |      // Convert to shares while rounding up. Since 1 asset is guaranteed to be worth more than\n 429 |      // 1 share and any upwards rounding will not exceed 1 share, we can be sure that when the\n 430 |      // shares are converted back to assets (rounding down) the resulting asset value won't\n 431 |      // exceed `_maxWithdraw`.\n 432 |      uint256 _maxScaledRedeem = _maxWithdraw.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Up);\n 433 |      return _maxScaledRedeem >= _ownerShares ? _ownerShares : _maxScaledRedeem;\n 434 |  }\n\n     |  // @audit-issue The else clause is unnecessary\n 461 |  if (_totalAssets >= totalDebt_) {\n 462 |      return _assets;\n 463 |  } else {\n 464 |      // Follows the inverse conversion of `convertToAssets`\n 465 |      return _assets.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Up);\n 466 |  }\n\n     |  // @audit-issue The else clause is unnecessary\n 600 |  if (totalYieldBalance_ >= _yieldBuffer) {\n 601 |      return _yieldBuffer;\n 602 |  } else {\n 603 |      return totalYieldBalance_;\n 604 |  }\n\n     |  // @audit-issue The else clause is unnecessary\n 809 |  if (totalDebt_ >= _totalAssets) {\n 810 |      return 0;\n 811 |  } else {\n 812 |      unchecked {\n 813 |          return _totalAssets - totalDebt_;\n 814 |      }\n 815 |  }\n```",
          "loc": [
            "[344-351](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L344-L351)",
            "[358-365](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L358-L365)",
            "[384-391](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L384-L391)",
            "[425-434](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L425-L434)",
            "[461-466](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L461-L466)",
            "[600-604](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L600-L604)",
            "[809-815](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L809-L815)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Setters should prevent re-setting the same value",
      "description": "This especially problematic when the setter also emits the same value, which may be confusing to offline parsers.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Context\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n  :  |\n     |      // @audit-issue Check if `_liquidationPair` changes anything before assignment\n 745 |      liquidationPair = _liquidationPair;\n\n     |  // @audit-info Context\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n  :  |\n     |      // @audit-issue Check if `_yieldFeePercentage` changes anything before assignment\n 951 |      yieldFeePercentage = _yieldFeePercentage;\n\n     |  // @audit-info Context\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n     |      // @audit-issue Check if `_yieldFeeRecipient` changes anything before assignment\n 959 |      yieldFeeRecipient = _yieldFeeRecipient;\n```",
          "loc": [
            "[745](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L745)",
            "[951](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L951)",
            "[959](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L959)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info Context\n 128 |  function _setClaimer(address _claimer) internal {\n  :  |\n     |      // @audit-issue Check if `_claimer` changes anything before assignment\n 130 |      claimer = _claimer;\n```",
          "loc": [
            "[130](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L130)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-info Context\n  29 |  function setHooks(VaultHooks calldata hooks) external {\n     |      // @audit-issue Check if `hooks` changes anything before assignment\n  30 |      _hooks[msg.sender] = hooks;\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L30)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Non-`external`/`public` function names should begin with an underscore",
      "description": "According to the Solidity Style Guide, Non-`external`/`public` variable and function names should begin with an [underscore](https://docs.soliditylang.org/en/latest/style-guide.html#underscore-prefix-for-non-external-functions-and-variables).",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Prefix function name with an `_` (underscore)\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: State and local variables should be named using lowerCamelCase",
      "description": "The Solidity style guide [says](https://docs.soliditylang.org/en/latest/style-guide.html#local-and-state-variable-names) to use mixedCase for local and state variable names. Note that while OpenZeppelin may not follow this advice, it still is the recommended way of naming variables.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use lowerCamelCase style in name `asset_`\n 303 |  IERC20 asset_ = IERC20(yieldVault_.asset());\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalDebt_`\n 342 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_totalAssets`\n 343 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalDebt_`\n 356 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_totalAssets`\n 357 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_totalSupply`\n 375 |  uint256 _totalSupply = totalSupply();\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalDebt_`\n 376 |  uint256 totalDebt_ = _totalDebt(_totalSupply);\n\n     |  // @audit-issue Use lowerCamelCase style in name `twabSupplyLimit_`\n 380 |  uint256 twabSupplyLimit_ = _twabSupplyLimit(_totalSupply);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_maxDeposit`\n 381 |  uint256 _maxDeposit;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_latentBalance`\n 382 |  uint256 _latentBalance = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_maxYieldVaultDeposit`\n 383 |  uint256 _maxYieldVaultDeposit = yieldVault.maxDeposit(address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_maxWithdraw`\n 405 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_ownerAssets`\n 408 |  uint256 _ownerAssets = convertToAssets(balanceOf(_owner));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_maxWithdraw`\n 416 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_ownerShares`\n 417 |  uint256 _ownerShares = balanceOf(_owner);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_totalAssets`\n 423 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalDebt_`\n 424 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_maxScaledRedeem`\n 432 |  uint256 _maxScaledRedeem = _maxWithdraw.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Up);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_totalAssets`\n 455 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalDebt_`\n 460 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_shares`\n 476 |  uint256 _shares = previewDeposit(_assets);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_assets`\n 483 |  uint256 _assets = previewMint(_shares);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_shares`\n 494 |  uint256 _shares = previewWithdraw(_assets);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_assets`\n 505 |  uint256 _assets = previewRedeem(_shares);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_shares`\n 543 |  uint256 _shares = previewDeposit(_assets);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_owner`\n 553 |  address _owner = msg.sender;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_shares`\n 555 |  uint256 _shares = previewDeposit(_assets);\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalYieldBalance_`\n 598 |  uint256 totalYieldBalance_ = _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldBuffer`\n 599 |  uint256 _yieldBuffer = yieldBuffer;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldFeeBalance`\n 614 |  uint256 _yieldFeeBalance = yieldFeeBalance;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_totalSupply`\n 632 |  uint256 _totalSupply = totalSupply();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_maxAmountOut`\n 633 |  uint256 _maxAmountOut;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_liquidYield`\n 647 |  uint256 _liquidYield = \n\n     |  // @audit-issue Use lowerCamelCase style in name `_availableYield`\n 667 |  uint256 _availableYield = availableYieldBalance();\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldFeePercentage`\n 668 |  uint32 _yieldFeePercentage = yieldFeePercentage;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldFee`\n 671 |  uint256 _yieldFee;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_prizeToken`\n 708 |  address _prizeToken = address(prizePool.prizeToken());\n\n     |  // @audit-issue Use lowerCamelCase style in name `totalYieldBalance_`\n 824 |  uint256 totalYieldBalance_ = _totalYieldBalance(_totalAssets, totalDebt_);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldBuffer`\n 825 |  uint256 _yieldBuffer = yieldBuffer;\n\n     |  // @audit-issue Use lowerCamelCase style in name `_assetsWithDust`\n 861 |  uint256 _assetsWithDust = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldVaultShares`\n 865 |  uint256 _yieldVaultShares = yieldVault.previewDeposit(_assetsWithDust);\n\n     |  // @audit-issue Use lowerCamelCase style in name `_assetsUsed`\n 866 |  uint256 _assetsUsed = yieldVault.mint(_yieldVaultShares, address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_latentAssets`\n 931 |  uint256 _latentAssets = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Use lowerCamelCase style in name `_yieldVaultShares`\n 934 |  uint256 _yieldVaultShares = yieldVault.previewWithdraw(_assets - _latentAssets);\n```",
          "loc": [
            "[303](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L303)",
            "[342](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L342)",
            "[343](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L343)",
            "[356](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L356)",
            "[357](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L357)",
            "[375](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L375)",
            "[376](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L376)",
            "[380](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L380)",
            "[381](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L381)",
            "[382](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L382)",
            "[383](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L383)",
            "[405](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L405)",
            "[408](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L408)",
            "[416](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L416)",
            "[417](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L417)",
            "[423](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L423)",
            "[424](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L424)",
            "[432](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L432)",
            "[455](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L455)",
            "[460](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L460)",
            "[476](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L476)",
            "[483](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L483)",
            "[494](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L494)",
            "[505](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L505)",
            "[543](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L543)",
            "[553](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L553)",
            "[555](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L555)",
            "[598](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L598)",
            "[599](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L599)",
            "[614](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L614)",
            "[632](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L632)",
            "[633](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L633)",
            "[647](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L647)",
            "[667](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L667)",
            "[668](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L668)",
            "[671](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L671)",
            "[708](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L708)",
            "[824](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L824)",
            "[825](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L825)",
            "[861](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L861)",
            "[865](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L865)",
            "[866](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L866)",
            "[931](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L931)",
            "[934](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L934)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Use lowerCamelCase style in name `_vault`\n 102 |  PrizeVault _vault = new PrizeVault{\n```",
          "loc": [
            "[102](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L102)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style guide: Using underscore at the end of variable name",
      "description": "The use of underscore at the end of the variable name is uncommon and also suggests that the variable name was not completely changed. Consider refactoring `variableName_` to `variableName`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 290 |  string memory name_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 291 |  string memory symbol_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 292 |  IERC4626 yieldVault_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 293 |  PrizePool prizePool_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 294 |  address claimer_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 295 |  address yieldFeeRecipient_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 296 |  uint32 yieldFeePercentage_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 297 |  uint256 yieldBuffer_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 298 |  address owner_\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 303 |  IERC20 asset_ = IERC20(yieldVault_.asset());\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 342 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 356 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 376 |  uint256 totalDebt_ = _totalDebt(_totalSupply);\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 380 |  uint256 twabSupplyLimit_ = _twabSupplyLimit(_totalSupply);\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 424 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 460 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 598 |  uint256 totalYieldBalance_ = _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 772 |  function _tryGetAssetDecimals(IERC20 asset_) internal view returns (bool, uint8) {\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 808 |  function _totalYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal pure returns (uint256) {\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 823 |  function _availableYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal view returns (uint256) {\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n 824 |  uint256 totalYieldBalance_ = _totalYieldBalance(_totalAssets, totalDebt_);\n```",
          "loc": [
            "[290](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L290)",
            "[291](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L291)",
            "[292](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L292)",
            "[293](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L293)",
            "[294](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L294)",
            "[295](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L295)",
            "[296](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L296)",
            "[297](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L297)",
            "[298](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L298)",
            "[303](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L303)",
            "[342](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L342)",
            "[356](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L356)",
            "[376](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L376)",
            "[380](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L380)",
            "[424](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L424)",
            "[460](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L460)",
            "[598](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L598)",
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)",
            "[808](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L808)",
            "[823](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L823)",
            "[824](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L824)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n  43 |  string memory name_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n  44 |  string memory symbol_,\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n  45 |  TwabController twabController_\n```",
          "loc": [
            "[43](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L43)",
            "[44](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L44)",
            "[45](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L45)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n\n     |  // @audit-issue Don't use underscores at the end of variable names\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)",
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Style: surround top level declarations with two blank lines",
      "description": "As per the [Solidity Style Guide](https://docs.soliditylang.org/en/v0.8.22/style-guide.html#blank-lines):\r\n        \r\n> Surround top level declarations in Solidity source with two blank lines.\r\n\r\nNote:  this rule does not apply to `import` directives following another `import` directive.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Separate top-level declarations with at least two lines\n   2 |  pragma solidity ^0.8.24;\n   4 |  import { IERC4626 } from \"openzeppelin/interfaces/IERC4626.sol\";\n```",
          "loc": [
            "[2-4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L2-L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Separate top-level declarations with at least two lines\n   2 |  pragma solidity ^0.8.24;\n   4 |  import { IERC20, IERC4626 } from \"openzeppelin/token/ERC20/extensions/ERC4626.sol\";\n```",
          "loc": [
            "[2-4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L2-L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Separate top-level declarations with at least two lines\n   2 |  pragma solidity ^0.8.24;\n   4 |  import { ERC20 } from \"openzeppelin/token/ERC20/ERC20.sol\";\n```",
          "loc": [
            "[2-4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L2-L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Separate top-level declarations with at least two lines\n   2 |  pragma solidity ^0.8.24;\n   4 |  import { IClaimable } from \"pt-v5-claimable-interface/interfaces/IClaimable.sol\";\n```",
          "loc": [
            "[2-4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L2-L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Separate top-level declarations with at least two lines\n   2 |  pragma solidity ^0.8.0;\n   4 |  import { VaultHooks } from \"../interfaces/IVaultHooks.sol\";\n```",
          "loc": [
            "[2-4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2-L4)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Syntax: place constants on left-hand side of comparisons",
      "description": "When writing a comparison, it is easy to accidentally use the `=` (assignment) operator. By placing constants on the left-hand side of the expression, the compiler will produce an error when an assignment has been accidentally used, thus preventing a bug.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 458 |  if (_totalAssets == 0) revert ZeroTotalAssets();\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 612 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 665 |  if (_amountOut == 0) revert LiquidationAmountOutZero();\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 672 |  if (_yieldFeePercentage != 0) {\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 776 |  if (success && encodedDecimals.length >= 32) {\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 844 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 845 |  if (_assets == 0) revert DepositZeroAssets();\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 894 |  if (_assets == 0) revert WithdrawZeroAssets();\n\n     |  // @audit-issue Swap left- and right-hand sides to avoid accidental assignments\n 895 |  if (_shares == 0) revert BurnZeroShares();\n```",
          "loc": [
            "[458](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L458)",
            "[612](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L612)",
            "[665](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L665)",
            "[672](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L672)",
            "[776](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L776)",
            "[844](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L844)",
            "[845](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L845)",
            "[894](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L894)",
            "[895](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L895)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Syntax: unnecessary `override`",
      "description": "Starting with Solidity version [0.8.8](https://docs.soliditylang.org/en/v0.8.20/contracts.html#function-overriding), using the `override` keyword when the function solely overrides an interface function, and the function doesn't exist in multiple base contracts, is unnecessary.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Remove `override`\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n```",
          "loc": [
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Remove `override`\n  56 |  function balanceOf(\n  57 |      address _account\n  58 |  ) public view virtual override(ERC20) returns (uint256) {\n\n     |  // @audit-issue Remove `override`\n  63 |  function totalSupply() public view virtual override(ERC20) returns (uint256) {\n\n     |  // @audit-issue Remove `override`\n  76 |  function _mint(address _receiver, uint256 _amount) internal virtual override {\n\n     |  // @audit-issue Remove `override`\n  87 |  function _burn(address _owner, uint256 _amount) internal virtual override {\n\n     |  // @audit-issue Remove `override`\n 100 |  function _transfer(address _from, address _to, uint256 _amount) internal virtual override {\n```",
          "loc": [
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)",
            "[76](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L76)",
            "[87](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L87)",
            "[100](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L100)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unnecessary cast",
      "description": "Unnecessary casts can be removed.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Cast to address is redundant\n 743 |  if (address(_liquidationPair) == address(0)) revert LPZeroAddress();\n\n     |  // @audit-issue Cast to address is redundant\n 747 |  emit LiquidationPairSet(address(this), address(_liquidationPair));\n```",
          "loc": [
            "[743](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L743)",
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused `error` definition",
      "description": "Note that there may be cases where an error superficially appears to be used, but this is only because there are multiple definitions of the error in different files. In such cases, the error definition should be moved into a separate file. The instances below are the unused definitions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Unused by files in analysis scope\n 206 |  error SweepZeroAssets();\n```",
          "loc": [
            "[206](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L206)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused `function` definition",
      "description": "Note that there may be cases where a function superficially appears to be used, but this is only because there are multiple definitions of the function in different files. In such cases, the function definition should be moved into a separate file. The instances below are the unused definitions *within the defined scope of analysis*. It is possible these functions are used outside the scope of the analysis.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue _mint is unused by files in analysis scope\n  76 |  function _mint(address _receiver, uint256 _amount) internal virtual override {\n\n     |  // @audit-issue _burn is unused by files in analysis scope\n  87 |  function _burn(address _owner, uint256 _amount) internal virtual override {\n\n     |  // @audit-issue _transfer is unused by files in analysis scope\n 100 |  function _transfer(address _from, address _to, uint256 _amount) internal virtual override {\n```",
          "loc": [
            "[76](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L76)",
            "[87](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L87)",
            "[100](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L100)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused `struct` definition",
      "description": "Note that there may be cases where a struct superficially appears to be used, but this is only because there are multiple definitions of the struct in different files. In such cases, the struct definition should be moved into a separate file. The instances below are the unused definitions.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue VaultHooks is unused by files in analysis scope\n   8 |  struct VaultHooks {\n```",
          "loc": [
            "[8](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L8)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Unused import",
      "description": "Some imports are not used, consider removing them.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue TwabController is unused\n  15 |  import { TwabController, SPONSORSHIP_ADDRESS } from \"pt-v5-twab-controller/TwabController.sol\";\n```",
          "loc": [
            "[15](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L15)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a single file for system wide constants",
      "description": "Consider grouping all the system constants under a single file. This finding shows only the first constant for each file, for brevity.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider grouping constants like this into a single file\n  74 |  uint32 public constant FEE_PRECISION = 1e9;\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L74)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider grouping constants like this into a single file\n  63 |  uint256 public constant YIELD_BUFFER = 1e5;\n```",
          "loc": [
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider grouping constants like this into a single file\n  26 |  TwabController public immutable twabController;\n```",
          "loc": [
            "[26](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider grouping constants like this into a single file\n  21 |  uint24 public constant HOOK_GAS = 150_000;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L21)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use a struct to encapsulate multiple function parameters",
      "description": "If a function has too many parameters, replacing them with a struct can improve code readability and maintainability, increase reusability, and reduce the likelihood of errors when passing the parameters.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n 524 |  function depositWithPermit(\n 525 |      uint256 _assets,\n 526 |      address _owner,\n 527 |      uint256 _deadline,\n 528 |      uint8 _v,\n 529 |      bytes32 _r,\n 530 |      bytes32 _s\n 531 |  ) external returns (uint256) {\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n 887 |  function _burnAndWithdraw(\n 888 |      address _caller,\n 889 |      address _receiver,\n 890 |      address _owner,\n 891 |      uint256 _shares,\n 892 |      uint256 _assets\n 893 |  ) internal {\n```",
          "loc": [
            "[289-299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L289-L299)",
            "[524-531](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L524-L531)",
            "[887-893](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L887-L893)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n  92 |  function deployVault(\n  93 |    string memory _name,\n  94 |    string memory _symbol,\n  95 |    IERC4626 _yieldVault,\n  96 |    PrizePool _prizePool,\n  97 |    address _claimer,\n  98 |    address _yieldFeeRecipient,\n  99 |    uint32 _yieldFeePercentage,\n 100 |    address _owner\n 101 |  ) external returns (PrizeVault) {\n```",
          "loc": [
            "[92-101](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L92-L101)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[76-82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L76-L82)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n  26 |  function beforeClaimPrize(\n  27 |      address winner,\n  28 |      uint8 tier,\n  29 |      uint32 prizeIndex,\n  30 |      uint96 reward,\n  31 |      address rewardRecipient\n  32 |  ) external returns (address);\n\n     |  // @audit-issue Consider replacing multiple parameters with structs\n  40 |  function afterClaimPrize(\n  41 |      address winner,\n  42 |      uint8 tier,\n  43 |      uint32 prizeIndex,\n  44 |      uint256 prize,\n  45 |      address recipient\n  46 |  ) external;\n```",
          "loc": [
            "[26-32](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L26-L32)",
            "[40-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L40-L46)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use safePermit in place of permit",
      "description": "OpenZeppelin's SafePermit is designed to facilitate secure and seamless token approvals via off-chain signed messages, mitigating the risks associated with on-chain transactions. It follows the ERC-2612 standard, ensuring compatibility with various wallets and dApps, and aligning with established industry guidelines.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n```",
          "loc": [
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use ternary expressions over `if`/`else` where possible",
      "description": "The code can be made more compact while also increasing readability by converting the following `if`-statements to ternaries (e.g. `foo += (x > y) ? a : b`)",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Convert to a ternary expression\n 344 |  if (_totalAssets >= totalDebt_) {\n 345 |      return _assets;\n 346 |  } else {\n 347 |      // If the vault controls less assets than what has been deposited a share will be worth a\n 348 |      // proportional amount of the total assets. This can happen due to fees, slippage, or loss\n 349 |      // of funds in the underlying yield vault.\n 350 |      return _assets.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Down);\n 351 |  }\n\n     |  // @audit-issue Convert to a ternary expression\n 358 |  if (_totalAssets >= totalDebt_) {\n 359 |      return _shares;\n 360 |  } else {\n 361 |      // If the vault controls less assets than what has been deposited a share will be worth a\n 362 |      // proportional amount of the total assets. This can happen due to fees, slippage, or loss\n 363 |      // of funds in the underlying yield vault.\n 364 |      return _shares.mulDiv(_totalAssets, totalDebt_, Math.Rounding.Down);\n 365 |  }\n\n     |  // @audit-issue Convert to a ternary expression\n 461 |  if (_totalAssets >= totalDebt_) {\n 462 |      return _assets;\n 463 |  } else {\n 464 |      // Follows the inverse conversion of `convertToAssets`\n 465 |      return _assets.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Up);\n 466 |  }\n\n     |  // @audit-issue Convert to a ternary expression\n 600 |  if (totalYieldBalance_ >= _yieldBuffer) {\n 601 |      return _yieldBuffer;\n 602 |  } else {\n 603 |      return totalYieldBalance_;\n 604 |  }\n```",
          "loc": [
            "[344-351](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L344-L351)",
            "[358-365](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L358-L365)",
            "[461-466](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L461-L466)",
            "[600-604](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L600-L604)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Convert to a ternary expression\n  85 |  if (_hooks[_winner].useBeforeClaimPrize) {\n  86 |      recipient = _hooks[_winner].implementation.beforeClaimPrize{ gas: HOOK_GAS }(\n  87 |          _winner,\n  88 |          _tier,\n  89 |          _prizeIndex,\n  90 |          _reward,\n  91 |          _rewardRecipient\n  92 |      );\n  93 |  } else {\n  94 |      recipient = _winner;\n  95 |  }\n```",
          "loc": [
            "[85-95](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L85-L95)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "Use the latest Solidity version for deployment",
      "description": "When deploying contracts, you should use the latest released version of Solidity (0.8.24). Apart from exceptional cases, only the latest version receives security fixes. Since deployed contracts should not use floating pragmas, I've flagged all instances where a version prior to 0.8.24 is allowed by the version pragma.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Update to target 0.8.24\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`constant`s should be defined rather than using magic numbers",
      "description": "Magic numbers are prone to error and reduce contract readability. This applies to assembly, too.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Define a named constant instead of using `18`\n 305 |  _underlyingDecimals = success ? assetDecimals : 18;\n  :  |\n     |  // @audit-issue Define a named constant instead of using `32`\n 776 |  if (success && encodedDecimals.length >= 32) {\n```",
          "loc": [
            "[305](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L305)",
            "[776](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L776)"
          ]
        }
      ]
    },
    {
      "severity": "NonCritical",
      "title": "`public` functions not called by the contract should be declared `external` instead",
      "description": "Contracts [are allowed](https://docs.soliditylang.org/en/latest/contracts.html#function-overriding) to override their parents' functions and change the visibility from `external` to `public`.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Context\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 320 |      function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 341 |      function convertToShares(uint256 _assets) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 397 |      function maxMint(address _owner) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 404 |      function maxWithdraw(address _owner) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 415 |      function maxRedeem(address _owner) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 584 |      function totalYieldBalance() public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 631 |      function liquidatableBalanceOf(address _tokenOut) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 659 |      function transferTokensOut(\n 660 |          address,\n 661 |          address _receiver,\n 662 |          address _tokenOut,\n 663 |          uint256 _amountOut\n 664 |      ) public virtual onlyLiquidationPair returns (bytes memory) {\n```",
          "loc": [
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[397](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L397)",
            "[404](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L404)",
            "[415](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L415)",
            "[584](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L584)",
            "[631](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L631)",
            "[659-664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L664)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-info Context\n  19 |  contract TwabERC20 is ERC20, ERC20Permit {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n  56 |      function balanceOf(\n  57 |          address _account\n  58 |      ) public view virtual override(ERC20) returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n  63 |      function totalSupply() public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Check `msg.sender` using `xor` and the scratch space",
      "description": "We can use assembly to efficiently validate `msg.sender` with the least amount of opcodes necessary. For more details check the following report [here](https://code4rena.com/reports/2023-05-juicebox#g-06-use-assembly-to-validate-msgsender).",
      "gasSavings": 48,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 261 |  if (msg.sender != liquidationPair) {\n\n 269 |  if (msg.sender != yieldFeeRecipient) {\n\n 532 |  if (_owner != msg.sender) {\n```",
          "loc": [
            "[261](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L261)",
            "[269](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L269)",
            "[532](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L532)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  53 |  if (msg.sender != claimer) revert CallerNotClaimer(msg.sender, claimer);\n```",
          "loc": [
            "[53](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L53)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Checks for `address(0x0)` are more efficient in assembly",
      "description": "Using assembly to check for zero can save gas by allowing more direct access to the evm and reducing some of the overhead associated with high-level operations in solidity.",
      "gasSavings": 42,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use assembly zero check\n 458 |  if (_totalAssets == 0) revert ZeroTotalAssets();\n\n     |  // @audit-issue Use assembly zero check\n 612 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Use assembly zero check\n 665 |  if (_amountOut == 0) revert LiquidationAmountOutZero();\n\n     |  // @audit-issue Use assembly zero check\n 844 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Use assembly zero check\n 845 |  if (_assets == 0) revert DepositZeroAssets();\n\n     |  // @audit-issue Use assembly zero check\n 894 |  if (_assets == 0) revert WithdrawZeroAssets();\n\n     |  // @audit-issue Use assembly zero check\n 895 |  if (_shares == 0) revert BurnZeroShares();\n```",
          "loc": [
            "[458](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L458)",
            "[612](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L612)",
            "[665](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L665)",
            "[844](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L844)",
            "[845](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L845)",
            "[894](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L894)",
            "[895](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L895)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space for building calldata",
      "description": "If an external call's calldata can fit into two or fewer words, use the scratch space to build the calldata, rather than allowing Solidity to do a memory expansion.",
      "gasSavings": 30,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n\n 303 |  IERC20 asset_ = IERC20(yieldVault_.asset());\n\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n 382 |  uint256 _latentBalance = _asset.balanceOf(address(this));\n\n 383 |  uint256 _maxYieldVaultDeposit = yieldVault.maxDeposit(address(this));\n\n 405 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n 416 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n 539 |  if (_asset.allowance(_owner, address(this)) != _assets) {\n\n 558 |  if (twabController.delegateOf(address(this), _owner) != SPONSORSHIP_ADDRESS) {\n\n 559 |  twabController.sponsor(_owner);\n\n 639 |  _maxAmountOut = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n 708 |  address _prizeToken = address(prizePool.prizeToken());\n\n 713 |  prizePool.contributePrizeTokens(address(this), _amountIn);\n\n 861 |  uint256 _assetsWithDust = _asset.balanceOf(address(this));\n\n 862 |  _asset.approve(address(yieldVault), _assetsWithDust);\n\n 865 |  uint256 _yieldVaultShares = yieldVault.previewDeposit(_assetsWithDust);\n\n 866 |  uint256 _assetsUsed = yieldVault.mint(_yieldVaultShares, address(this));\n\n 869 |  _asset.approve(address(yieldVault), 0);\n\n 922 |  return yieldVault.convertToAssets(yieldVault.maxRedeem(address(this)));\n\n 922 |  return yieldVault.convertToAssets(yieldVault.maxRedeem(address(this)));\n\n 931 |  uint256 _latentAssets = _asset.balanceOf(address(this));\n\n 934 |  uint256 _yieldVaultShares = yieldVault.previewWithdraw(_assets - _latentAssets);\n\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L299)",
            "[303](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L303)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[382](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L382)",
            "[383](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L383)",
            "[405](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L405)",
            "[416](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L416)",
            "[539](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L539)",
            "[558](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L558)",
            "[559](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L559)",
            "[639](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L639)",
            "[708](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L708)",
            "[713](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L713)",
            "[861](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L861)",
            "[862](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L862)",
            "[865](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L865)",
            "[866](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L866)",
            "[869](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L869)",
            "[922](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L922)",
            "[922](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L922)",
            "[931](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L931)",
            "[934](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L934)",
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  59 |  return twabController.balanceOf(address(this), _account);\n\n  64 |  return twabController.totalSupply(address(this));\n\n  77 |  twabController.mint(_receiver, SafeCast.toUint96(_amount));\n\n  88 |  twabController.burn(_owner, SafeCast.toUint96(_amount));\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L59)",
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L64)",
            "[77](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L77)",
            "[88](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L88)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space for calculating small `keccak256` hashes",
      "description": "If the arguments to the encode call can fit into the scratch space (two words or fewer), then it's more efficient to use assembly to generate the hash (**80 gas**):\r\n`keccak256(abi.encodePacked(x, y))` -> `assembly {mstore(0x00, a); mstore(0x20, b); let hash := keccak256(0x00, 0x40); }`",
      "gasSavings": 80,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n 103 |  salt: keccak256(abi.encode(msg.sender, deployerNonces[msg.sender]++))\n```",
          "loc": [
            "[103](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L103)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Assembly: Use scratch space when building emitted events with two data arguments",
      "description": "To efficiently emit events, it's possible to utilize assembly by making use of scratch space and the free memory pointer. This approach has the advantage of potentially avoiding the costs associated with memory expansion.\r\n\r\nHowever, it's important to note that in order to safely optimize this process, it is preferable to cache and restore the free memory pointer.\r\n\r\nA good example of such practice can be seen in [Solady's](https://github.com/Vectorized/solady/blob/main/src/tokens/ERC1155.sol#L167) codebase.",
      "gasSavings": 2,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 621 |  emit ClaimYieldFeeShares(msg.sender, _shares);\n\n 747 |  emit LiquidationPairSet(address(this), address(_liquidationPair));\n```",
          "loc": [
            "[621](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L621)",
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Avoid updating storage when the value hasn't changed",
      "description": "If the old value is equal to the new value, not re-storing the value will avoid a `Gsreset` (2900 gas), potentially at the expense of a `Gcoldsload` (2100 gas) or a `Gwarmaccess` (100 gas). Min = `Gsreset` - `Gcoldsload`, Max = `Gsreset` - `Gwarmaccess`.",
      "gasSavings": 4000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Contains state variable assignments\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n  :  |\n     |      // @audit-issue Consider checking if the value has changed first\n 745 |      liquidationPair = _liquidationPair;\n\n     |  // @audit-info Contains state variable assignments\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n  :  |\n     |      // @audit-issue Consider checking if the value has changed first\n 951 |      yieldFeePercentage = _yieldFeePercentage;\n\n     |  // @audit-info Contains state variable assignments\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n     |      // @audit-issue Consider checking if the value has changed first\n 959 |      yieldFeeRecipient = _yieldFeeRecipient;\n```",
          "loc": [
            "[745](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L745)",
            "[951](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L951)",
            "[959](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L959)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info Contains state variable assignments\n 128 |  function _setClaimer(address _claimer) internal {\n  :  |\n     |      // @audit-issue Consider checking if the value has changed first\n 130 |      claimer = _claimer;\n```",
          "loc": [
            "[130](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L130)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-info Contains state variable assignments\n  29 |  function setHooks(VaultHooks calldata hooks) external {\n     |      // @audit-issue Consider checking if the value has changed first\n  30 |      _hooks[msg.sender] = hooks;\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L30)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Cache multiple accesses of mapping/array values",
      "description": "Caching a mapping's value in a local `storage` or `calldata` variable when the value is accessed multiple times, saves ~42 gas per access due to not having to recalculate the key's keccak256 hash (Gkeccak256 - 30 gas) and that calculation's associated stack operations. Caching an array's struct avoids recalculating the array offsets into memory/calldata.",
      "gasSavings": 24,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info Contains multiple accesses to state\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n  :  |\n     |      // @audit-issue Cache this value\n  85 |      if (_hooks[_winner].useBeforeClaimPrize) {\n     |          // @audit-issue Cache this value\n  86 |          recipient = _hooks[_winner].implementation.beforeClaimPrize{ gas: HOOK_GAS }(\n  :  |\n     |      // @audit-issue Cache this value\n 108 |      if (_hooks[_winner].useAfterClaimPrize) {\n     |          // @audit-issue Cache this value\n 109 |          _hooks[_winner].implementation.afterClaimPrize{ gas: HOOK_GAS }(\n```",
          "loc": [
            "[85](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L85)",
            "[86](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L86)",
            "[108](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L108)",
            "[109](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L109)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Cache state variables accessed multiple times in the same function",
      "description": "The instances below point to the second+ access of a state variable within a function. Caching of a state variable replaces each Gwarmaccess (100 gas) with a much cheaper stack read. Other less obvious fixes/optimizations include having local memory caches of state variable structs, or having local caches of state variable contracts/addresses.",
      "gasSavings": 388,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n  :  |\n     |      // @audit-issue _hooks read #1\n  85 |      if (_hooks[_winner].useBeforeClaimPrize) {\n     |          // @audit-issue _hooks read #2\n  86 |          recipient = _hooks[_winner].implementation.beforeClaimPrize{ gas: HOOK_GAS }(\n  :  |\n     |      // @audit-issue _hooks read #3\n 108 |      if (_hooks[_winner].useAfterClaimPrize) {\n     |          // @audit-issue _hooks read #4\n 109 |          _hooks[_winner].implementation.afterClaimPrize{ gas: HOOK_GAS }(\n```",
          "loc": [
            "[85](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L85)",
            "[86](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L86)",
            "[108](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L108)",
            "[109](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L109)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider changing some `public` variables to `private`/`internal`",
      "description": "Public state variables in Solidity automatically generate getter functions, increasing deployment costs.\r\n                    \r\nExamples of variables that probably don't need to be public - anybody who needs to inspect them can check the on-chain contract storage:\r\n\r\n* Factories\r\n* Controllers\r\n* Governance\r\n* Owner, roles, etc.\r\n\r\n",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  74 |  uint32 public constant FEE_PRECISION = 1e9;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  80 |  uint32 public constant MAX_YIELD_FEE = 9e8;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n 112 |  uint256 public immutable yieldBuffer;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n 115 |  IERC4626 public immutable yieldVault;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n 119 |  uint32 public yieldFeePercentage;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n 122 |  address public yieldFeeRecipient;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n 125 |  uint256 public yieldFeeBalance;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n 128 |  address public liquidationPair;\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L74)",
            "[80](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L80)",
            "[112](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L112)",
            "[115](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L115)",
            "[119](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L119)",
            "[122](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L122)",
            "[125](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L125)",
            "[128](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L128)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  63 |  uint256 public constant YIELD_BUFFER = 1e5;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  66 |  PrizeVault[] public allVaults;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  69 |  mapping(address vault => bool deployedByFactory) public deployedVaults;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  72 |  mapping(address deployer => uint256 nonce) public deployerNonces;\n```",
          "loc": [
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L63)",
            "[66](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L66)",
            "[69](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L69)",
            "[72](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L72)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  26 |  TwabController public immutable twabController;\n```",
          "loc": [
            "[26](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L26)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  21 |  uint24 public constant HOOK_GAS = 150_000;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  24 |  PrizePool public immutable prizePool;\n\n     |  // @audit-issue Reconsider whether this variable has to be public\n  27 |  address public claimer;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L21)",
            "[24](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L24)",
            "[27](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L27)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Consider pre-calculating the address of `address(this)` to save gas",
      "description": "Instead of using `address(this)`, it is more gas-efficient to pre-calculate and use the hardcoded address. Foundry's `script.sol` and solmate's `LibRlp.sol` contracts can help achieve this.\r\nRefrences:-[book.getfoundry](https://book.getfoundry.sh/reference/forge-std/compute-create-address)-[twitter](https://twitter.com/transmissions11/status/1518507047943245824).",
      "gasSavings": 805,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 382 |  uint256 _latentBalance = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 383 |  uint256 _maxYieldVaultDeposit = yieldVault.maxDeposit(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 405 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 416 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 539 |  if (_asset.allowance(_owner, address(this)) != _assets) {\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 558 |  if (twabController.delegateOf(address(this), _owner) != SPONSORSHIP_ADDRESS) {\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 634 |  if (_tokenOut == address(this)) {\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 639 |  _maxAmountOut = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 691 |  } else if (_tokenOut == address(this)) {\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 713 |  prizePool.contributePrizeTokens(address(this), _amountIn);\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 726 |  return (_tokenOut == address(_asset) || _tokenOut == address(this)) && _liquidationPair == liquidationPair;\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 747 |  emit LiquidationPairSet(address(this), address(_liquidationPair));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 856 |  address(this),\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 861 |  uint256 _assetsWithDust = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 866 |  uint256 _assetsUsed = yieldVault.mint(_yieldVaultShares, address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 922 |  return yieldVault.convertToAssets(yieldVault.maxRedeem(address(this)));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 931 |  uint256 _latentAssets = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 936 |  yieldVault.redeem(_yieldVaultShares, address(this), address(this));\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n 938 |  if (_receiver != address(this)) {\n```",
          "loc": [
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[382](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L382)",
            "[383](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L383)",
            "[405](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L405)",
            "[416](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L416)",
            "[539](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L539)",
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)",
            "[558](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L558)",
            "[634](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L634)",
            "[639](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L639)",
            "[691](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L691)",
            "[713](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L713)",
            "[726](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L726)",
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)",
            "[856](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L856)",
            "[861](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L861)",
            "[866](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L866)",
            "[922](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L922)",
            "[931](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L931)",
            "[936](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L936)",
            "[938](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L938)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n  59 |  return twabController.balanceOf(address(this), _account);\n\n     |  // @audit-issue Pre-calculate & hardcode instead\n  64 |  return twabController.totalSupply(address(this));\n```",
          "loc": [
            "[59](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L59)",
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L64)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Constructors can be marked `payable`",
      "description": "Payable functions cost less gas to execute, since the compiler does not have to add extra checks to ensure that a payment wasn't provided. A constructor can safely be marked as payable, since only the deployer would be able to pass funds, and the project itself would not pass any funds.",
      "gasSavings": 63,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider marking payable to save gas\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n```",
          "loc": [
            "[289-299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L289-L299)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider marking payable to save gas\n  42 |  constructor(\n  43 |      string memory name_,\n  44 |      string memory symbol_,\n  45 |      TwabController twabController_\n  46 |  ) ERC20(name_, symbol_) ERC20Permit(name_) {\n```",
          "loc": [
            "[42-46](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L42-L46)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider marking payable to save gas\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Detect zero value transfers to save gas",
      "description": "Detecting and aborting zero value transfers will save at least 100 gas.",
      "gasSavings": 100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Divisions can be `unchecked` to save gas",
      "description": "The expression `type(int).min/(-1)` is the only case where division causes an overflow. Therefore, uncheck can be used to save gas in scenarios where it is certain that such an overflow will not occur.",
      "gasSavings": 1,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n```",
          "loc": [
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Duplicated `require()`/`revert()` checks should be refactored to a modifier or function to save deployment gas",
      "description": "This will cost more runtime gas, but will reduce deployment gas when the function is (optionally called via a modifier) called more than once as is the case for the examples below. Most projects do not make this trade-off, but it's available nonetheless.",
      "gasSavings": 1,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Duplicates of this conditional revert statement were detected\n 612 |  if (_shares == 0) revert MintZeroShares();\n  :  |\n     |  // @audit-issue First seen at pt-v5-vault/src/PrizeVault.sol:612\n 844 |  if (_shares == 0) revert MintZeroShares();\n```",
          "loc": [
            "[844](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L844)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Emitting constants wastes gas",
      "description": "Every event parameter costs `Glogdata` (**8 gas**) per byte. You can avoid this extra cost, in cases where you're emitting a constant, by creating a new version of the event which doesn't have the parameter (and have users look to the contract's variables for its value instead). Alternatively, in the case of boolean constants, two events can be created - one representing the `true` case and one representing the `false` case.",
      "gasSavings": 16,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  78 |  emit Transfer(address(0), _receiver, _amount);\n\n  89 |  emit Transfer(_owner, address(0), _amount);\n```",
          "loc": [
            "[78](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L78)",
            "[89](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L89)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Enable IR-based code generation",
      "description": "By using `--via-ir` or `{\"viaIR\": true}`, the compiler is able to use more advanced [multi-function optimizations](https://docs.soliditylang.org/en/v0.8.17/ir-breaking-changes.html#solidity-ir-based-codegen-changes), for extra gas savings.\r\n\r\n> ðŸ”´ IR-based code generation was not observed to be enabled in the configuration.\r\n",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Enable viaIR for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Enable viaIR for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Enable viaIR for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Enable viaIR for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Enable viaIR for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Enable viaIR for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L1)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Function names can be optimized to save gas",
      "description": "Function that are `public`/`external` and `public` state variable names can be optimized to save gas.\r\n\r\nMethod IDs that have two leading zero bytes can save **128 gas** each during deployment, and renaming functions to have lower method IDs will save **22 gas** per call, per sorted position shifted. [Reference](https://blog.emn178.cc/en/post/solidity-gas-optimization-function-name/).\r\n\r\nYou can use the [Function Name Optimizer Tool](https://emn178.github.io/solidity-optimize-name/) to find new function names.",
      "gasSavings": 110,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Can be optimized to two leading zeros:\n     |  // 0x313ce567: decimals()\n     |  // 0x38d52e0f: asset()\n     |  // 0x01e1d114: totalAssets()\n     |  // 0xc6e6f592: convertToShares()\n     |  // 0x07a2d13a: convertToAssets()\n     |  // 0x402d267d: maxDeposit()\n     |  // 0xc63d75b6: maxMint()\n     |  // 0xce96cb77: maxWithdraw()\n     |  // 0xd905777e: maxRedeem()\n     |  // 0xef8b30f7: previewDeposit()\n     |  // 0xb3d7f6b9: previewMint()\n     |  // 0x0a28a477: previewWithdraw()\n     |  // 0x4cdad506: previewRedeem()\n     |  // 0x6e553f65: deposit()\n     |  // 0x94bf804d: mint()\n     |  // 0xb460af94: withdraw()\n     |  // 0xba087652: redeem()\n     |  // 0x50921b23: depositWithPermit()\n     |  // 0xb6cce5e2: sponsor()\n     |  // 0xfc7b9c18: totalDebt()\n     |  // 0xd4122abf: totalYieldBalance()\n     |  // 0x0d1e5255: availableYieldBalance()\n     |  // 0x237fd108: currentYieldBuffer()\n     |  // 0x353d5a18: claimYieldFeeShares()\n     |  // 0xb0fcf626: liquidatableBalanceOf()\n     |  // 0x7cc99d3f: transferTokensOut()\n     |  // 0xc8576e61: verifyTokensIn()\n     |  // 0x700f04ef: targetOf()\n     |  // 0x1b571924: isLiquidationPair()\n     |  // 0xcdfb5832: setClaimer()\n     |  // 0x25fa66e0: setLiquidationPair()\n     |  // 0xe4e243ac: setYieldFeePercentage()\n     |  // 0x63003b16: setYieldFeeRecipient()\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L65)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Can be optimized to two leading zeros:\n     |  // 0xb688010c: deployVault()\n     |  // 0x8d654023: totalVaults()\n  13 |  contract PrizeVaultFactory {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Can be optimized to two leading zeros:\n     |  // 0x70a08231: balanceOf()\n     |  // 0x18160ddd: totalSupply()\n  19 |  contract TwabERC20 is ERC20, ERC20Permit {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Can be optimized to two leading zeros:\n     |  // 0x2895cace: claimPrize()\n  13 |  abstract contract Claimable is HookManager, IClaimable {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Can be optimized to two leading zeros:\n     |  // 0xde03f408: getHooks()\n     |  // 0xc78c72c1: setHooks()\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Functions guaranteed to revert when called by normal users can be marked `payable`",
      "description": "If a function modifier such as `onlyOwner` is used, the function will revert if a normal user tries to pay the function. Marking the function as `payable` will lower the gas cost for legitimate callers because the compiler will not include checks for whether a payment was provided. The extra opcodes avoided are \r\n            `CALLVALUE`(2), `DUP1`(3), `ISZERO`(3), `PUSH2`(3), `JUMPI`(10), `PUSH1`(3), `DUP1`(3), `REVERT`(0), `JUMPDEST`(1), `POP`(2), which costs an average of about **21 gas per call** to the function, in addition to the extra deployment cost.",
      "gasSavings": 168,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider marking payable to save gas\n 611 |  function claimYieldFeeShares(uint256 _shares) external onlyYieldFeeRecipient {\n\n     |  // @audit-issue Consider marking payable to save gas\n 659 |  function transferTokensOut(\n 660 |      address,\n 661 |      address _receiver,\n 662 |      address _tokenOut,\n 663 |      uint256 _amountOut\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n\n     |  // @audit-issue Consider marking payable to save gas\n 703 |  function verifyTokensIn(\n 704 |      address _tokenIn,\n 705 |      uint256 _amountIn,\n 706 |      bytes calldata\n 707 |  ) external onlyLiquidationPair {\n\n     |  // @audit-issue Consider marking payable to save gas\n 735 |  function setClaimer(address _claimer) external onlyOwner {\n\n     |  // @audit-issue Consider marking payable to save gas\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n\n     |  // @audit-issue Consider marking payable to save gas\n 753 |  function setYieldFeePercentage(uint32 _yieldFeePercentage) external onlyOwner {\n\n     |  // @audit-issue Consider marking payable to save gas\n 759 |  function setYieldFeeRecipient(address _yieldFeeRecipient) external onlyOwner {\n```",
          "loc": [
            "[611](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L611)",
            "[659-664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L664)",
            "[703-707](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L703-L707)",
            "[735](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L735)",
            "[742](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L742)",
            "[753](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L753)",
            "[759](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L759)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider marking payable to save gas\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[76-82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L76-L82)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Inline `internal` functions that are only called once",
      "description": "Saves 20-40 gas per instance. See https://blog.soliditylang.org/2021/03/02/saving-gas-with-simple-inliner/ for more details.",
      "gasSavings": 40,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Inline this function, it's only used once\n 772 |  function _tryGetAssetDecimals(IERC20 asset_) internal view returns (bool, uint8) {\n```",
          "loc": [
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Inline this function, it's only used once\n 128 |  function _setClaimer(address _claimer) internal {\n```",
          "loc": [
            "[128](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L128)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Inline `modifier`s that are only used once, to save gas",
      "description": "Inline `modifier`s that are only used once, to save gas.",
      "gasSavings": 100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Contains redundant modifiers\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n  :  |\n     |      // @audit-issue This is the only invocation of this modifier\n 611 |      function claimYieldFeeShares(uint256 _shares) external onlyYieldFeeRecipient {\n```",
          "loc": [
            "[611](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L611)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info Contains redundant modifiers\n  13 |  abstract contract Claimable is HookManager, IClaimable {\n  :  |\n     |      // @audit-issue This is the only invocation of this modifier\n  82 |      ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L82)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Mappings are cheaper to use than storage arrays",
      "description": "When using storage arrays, solidity adds an internal lookup of the array's length (a Gcoldsload **2100 gas**) to ensure you don't read past the array's end. You can avoid this lookup by using a `mapping` and storing the number of entries in a separate storage variable. In cases where you have sentinel values (e.g. 'zero' means invalid), you can avoid length checks.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n  66 |  PrizeVault[] public allVaults;\n```",
          "loc": [
            "[66](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L66)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Multiple accesses of a mapping/array should use a local variable cache",
      "description": "The instances below point to multiple accesses of a value inside a mapping/array, within a function. Caching a mapping's value in a local `storage` or `calldata` variable when the value is accessed [multiple times](https://gist.github.com/IllIllI000/ec23a57daa30a8f8ca8b9681c8ccefb0), saves **~42 gas per access** due to not having to recalculate the key's keccak256 hash (Gkeccak256 - **30 gas**) and that calculation's associated stack operations. Caching an array's struct avoids recalculating the array offsets into memory/calldata",
      "gasSavings": 168,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info Context\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n  :  |\n     |      // @audit-issue `_hooks[_winner]` usage #1\n  85 |      if (_hooks[_winner].useBeforeClaimPrize) {\n     |          // @audit-issue `_hooks[_winner]` usage #2\n  86 |          recipient = _hooks[_winner].implementation.beforeClaimPrize{ gas: HOOK_GAS }(\n  :  |\n     |      // @audit-issue `_hooks[_winner]` usage #3\n 108 |      if (_hooks[_winner].useAfterClaimPrize) {\n     |          // @audit-issue `_hooks[_winner]` usage #4\n 109 |          _hooks[_winner].implementation.afterClaimPrize{ gas: HOOK_GAS }(\n```",
          "loc": [
            "[85](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L85)",
            "[86](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L86)",
            "[108](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L108)",
            "[109](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L109)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Nesting `if`-statements is cheaper than using `&&`",
      "description": "Nesting `if`-statements avoids the stack operations of setting up and using an extra `jumpdest`, and saves **6 [gas](https://gist.github.com/IllIllI000/7f3b818abecfadbef93b894481ae7d19)**",
      "gasSavings": 6,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider using nested ifs instead of && to save gas\n 776 |  if (success && encodedDecimals.length >= 32) {\n```",
          "loc": [
            "[776](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L776)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Only emit event in setter function if the state variable was changed",
      "description": "Emitting events in setter functions of smart contracts only when state variables change saves gas. This is because emitting events consumes gas, and unnecessary events, where no actual state change occurs, lead to wasteful consumption.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Unvalidated: _liquidationPair\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n  :  |\n     |      // @audit-issue Potentially redundant emit\n 747 |      emit LiquidationPairSet(address(this), address(_liquidationPair));\n\n     |  // @audit-info Unvalidated: _yieldFeePercentage\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n  :  |\n     |      // @audit-issue Potentially redundant emit\n 952 |      emit YieldFeePercentageSet(_yieldFeePercentage);\n\n     |  // @audit-info Unvalidated: _yieldFeeRecipient\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n  :  |\n     |      // @audit-issue Potentially redundant emit\n 960 |      emit YieldFeeRecipientSet(_yieldFeeRecipient);\n```",
          "loc": [
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)",
            "[952](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L952)",
            "[960](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L960)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-info Unvalidated: _claimer\n 128 |  function _setClaimer(address _claimer) internal {\n  :  |\n     |      // @audit-issue Potentially redundant emit\n 131 |      emit ClaimerSet(_claimer);\n```",
          "loc": [
            "[131](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L131)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-info Unvalidated: hooks\n  29 |  function setHooks(VaultHooks calldata hooks) external {\n  :  |\n     |      // @audit-issue Potentially redundant emit\n  31 |      emit SetHooks(msg.sender, hooks);\n```",
          "loc": [
            "[31](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L31)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Operator `>=`/`<=` costs less gas than operator `>`/`<`",
      "description": "The compiler uses opcodes `GT` and `ISZERO` for solidity code that uses `>`, but only requires `LT` for `>=`, [which saves **3 gas**](https://gist.github.com/IllIllI000/3dc79d25acccfa16dee4e83ffdc6ffde). If `<` is being used, the condition can be inverted.",
      "gasSavings": 30,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Switch > to >= and < to <=\n 377 |  if (totalAssets() < totalDebt_) return 0;\n\n     |  // @audit-issue Switch > to >= and < to <=\n 390 |  return twabSupplyLimit_ < _maxDeposit ? twabSupplyLimit_ : _maxDeposit;\n\n     |  // @audit-issue Switch > to >= and < to <=\n 409 |  return _ownerAssets < _maxWithdraw ? _ownerAssets : _maxWithdraw;\n\n     |  // @audit-issue Switch > to >= and < to <=\n 422 |  if (_ownerShares > _maxWithdraw) {\n\n     |  // @audit-issue Switch > to >= and < to <=\n 615 |  if (_shares > _yieldFeeBalance) revert SharesExceedsYieldFeeBalance(_shares, _yieldFeeBalance);\n\n     |  // @audit-issue Switch > to >= and < to <=\n 679 |  if (_amountOut + _yieldFee > _availableYield) {\n\n     |  // @audit-issue Switch > to >= and < to <=\n 684 |  if (_yieldFee > 0) {\n\n     |  // @audit-issue Switch > to >= and < to <=\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n\n     |  // @audit-issue Switch > to >= and < to <=\n 932 |  if (_assets > _latentAssets) {\n\n     |  // @audit-issue Switch > to >= and < to <=\n 948 |  if (_yieldFeePercentage > MAX_YIELD_FEE) {\n```",
          "loc": [
            "[377](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L377)",
            "[390](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L390)",
            "[409](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L409)",
            "[422](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L422)",
            "[615](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L615)",
            "[679](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L679)",
            "[684](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L684)",
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)",
            "[932](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L932)",
            "[948](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L948)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Public functions not used internally can be marked as external to save gas",
      "description": "Public functions that aren't used internally in Solidity contracts should be made external to optimize gas usage and improve contract efficiency. External functions can only be called from outside the contract, and their arguments are directly read from the calldata, which is more gas-efficient than loading them into memory, as is the case for public functions. By using external visibility, developers can reduce gas consumption for external calls and ensure that the contract operates more cost-effectively for users. Moreover, setting the appropriate visibility level for functions also enhances code readability and maintainability, promoting a more secure and well-structured contract design. ",
      "gasSavings": 410,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Context\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 320 |      function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 341 |      function convertToShares(uint256 _assets) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 397 |      function maxMint(address _owner) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 404 |      function maxWithdraw(address _owner) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 415 |      function maxRedeem(address _owner) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 584 |      function totalYieldBalance() public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 631 |      function liquidatableBalanceOf(address _tokenOut) public view returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n 659 |      function transferTokensOut(\n 660 |          address,\n 661 |          address _receiver,\n 662 |          address _tokenOut,\n 663 |          uint256 _amountOut\n 664 |      ) public virtual onlyLiquidationPair returns (bytes memory) {\n```",
          "loc": [
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[397](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L397)",
            "[404](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L404)",
            "[415](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L415)",
            "[584](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L584)",
            "[631](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L631)",
            "[659-664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L664)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-info Context\n  19 |  contract TwabERC20 is ERC20, ERC20Permit {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n  56 |      function balanceOf(\n  57 |          address _account\n  58 |      ) public view virtual override(ERC20) returns (uint256) {\n  :  |\n     |      // @audit-issue Not called internally by this contract\n  63 |      function totalSupply() public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce deployment gas costs by fine-tuning IPFS file hashes",
      "description": "Solc [currently by default](https://docs.soliditylang.org/en/v0.8.23/metadata.html#encoding-of-the-metadata-hash-in-the-bytecode) appends the IPFS hash (in CID v0) of the canonical metadata file and the compiler version to the end of the bytecode. This value is variable-length [CBOR-encoded](https://tools.ietf.org/html/rfc7049) i.e. it can be optimized in order to reduce deployment gas costs. See [this article] for more information (https://www.rareskills.io/post/solidity-metadata).\r\n                    \r\n*Note:* multiple contracts in the same file will share the same hash.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue IPFS hash is dweb:/ipfs/QmcMHci3QzQtzfwvLJNUbMUbApah8QwkwgMCZsdHHTgXcr\n  65 |  contract PrizeVault is TwabERC20, Claimable, IERC4626, ILiquidationSource, Ownable {\n```",
          "loc": [
            "[65](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L65)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue IPFS hash is dweb:/ipfs/QmPmgq4k77FYP6RzH4Jrt14N9HdptQW1gBnexbKFLKHYYB\n  13 |  contract PrizeVaultFactory {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue IPFS hash is dweb:/ipfs/QmXhskESEmfkzcEdEuJ3x5WdVRjgFRs8xiGGFCsy4nvoFF\n  19 |  contract TwabERC20 is ERC20, ERC20Permit {\n```",
          "loc": [
            "[19](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L19)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue IPFS hash is dweb:/ipfs/QmUWLj2LdjfCd9Fv4fFAdxLgPL2shkxHHU6Wxn8ezjddU2\n  13 |  abstract contract Claimable is HookManager, IClaimable {\n```",
          "loc": [
            "[13](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L13)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue IPFS hash is dweb:/ipfs/QmPgUoXAbfrbeE3gHzeYLog7PMiGNsWgG7x6c518E4RT1q\n   9 |  abstract contract HookManager {\n```",
          "loc": [
            "[9](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L9)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue IPFS hash is dweb:/ipfs/QmNdCpkpwXjQxDqiUuFTsdYHLs31i9jygY1gXuen6irp1G\n  17 |  interface IVaultHooks {\n```",
          "loc": [
            "[17](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L17)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Reduce gas usage by moving to Solidity 0.8.19 or later",
      "description": "See [this](https://blog.soliditylang.org/2023/02/22/solidity-0.8.19-release-announcement/#preventing-dead-code-in-runtime-bytecode) link for the full details.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Require Solidity 0.8.19 or later\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Redundant state variable getters",
      "description": "Getters for public state variables are automatically generated so there is no need to code them manually and lose gas",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n 321 |      return _underlyingDecimals;\n 322 |  }\n```",
          "loc": [
            "[320-322](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320-L322)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Redundant type conversion",
      "description": "Casting a variable to its own type is redundant and a waste of gas.",
      "gasSavings": 80,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue `address(_liquidationPair)` is a redundant type cast\n 743 |  if (address(_liquidationPair) == address(0)) revert LPZeroAddress();\n\n     |  // @audit-issue `address(_liquidationPair)` is a redundant type cast\n 747 |  emit LiquidationPairSet(address(this), address(_liquidationPair));\n```",
          "loc": [
            "[743](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L743)",
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Refactor modifiers to call a local function",
      "description": "Modifiers code is copied in all instances where it's used, increasing bytecode size. If deployment gas costs are a concern for this contract, refactoring modifiers into functions can reduce bytecode size significantly at the cost of one JUMP.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Refactor to a function to save gas\n 260 |  modifier onlyLiquidationPair() {\n\n     |  // @audit-issue Refactor to a function to save gas\n 268 |  modifier onlyYieldFeeRecipient() {\n```",
          "loc": [
            "[260](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L260)",
            "[268](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L268)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Refactor to a function to save gas\n  52 |  modifier onlyClaimer() {\n```",
          "loc": [
            "[52](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L52)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Replace OpenZeppelin components with Solady equivalents to save gas",
      "description": "The following OpenZeppelin imports have a [Solady](https://github.com/Vectorized/solady/tree/main) equivalent, as such they can be used to save GAS as Solady modules have been specifically designed to be as GAS efficient as possible.",
      "gasSavings": 150,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider using the Solady implementation\n   6 |  import { ERC20, IERC20, IERC20Metadata } from \"openzeppelin/token/ERC20/ERC20.sol\";\n```",
          "loc": [
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L6)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider using the Solady implementation\n   4 |  import { IERC20, IERC4626 } from \"openzeppelin/token/ERC20/extensions/ERC4626.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider using the Solady implementation\n   4 |  import { ERC20 } from \"openzeppelin/token/ERC20/ERC20.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L4)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Same cast is done multiple times",
      "description": "It's cheaper to do it once, and store the result to a variable.",
      "gasSavings": 30,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-info Contains redundant type conversions\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n     |      // @audit-issue Cache this type conversion result that is used in multiple locations\n 743 |      if (address(_liquidationPair) == address(0)) revert LPZeroAddress();\n  :  |\n     |      // @audit-issue Cache this type conversion result that is used in multiple locations\n 747 |      emit LiquidationPairSet(address(this), address(_liquidationPair));\n\n     |  // @audit-info Contains redundant type conversions\n 843 |  function _depositAndMint(address _caller, address _receiver, uint256 _assets, uint256 _shares) internal {\n  :  |\n     |      // @audit-issue Cache this type conversion result that is used in multiple locations\n 862 |      _asset.approve(address(yieldVault), _assetsWithDust);\n  :  |\n     |          // @audit-issue Cache this type conversion result that is used in multiple locations\n 869 |          _asset.approve(address(yieldVault), 0);\n```",
          "loc": [
            "[743](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L743)",
            "[747](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L747)",
            "[862](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L862)",
            "[869](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L869)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-info Contains redundant type conversions\n  92 |  function deployVault(\n  93 |    string memory _name,\n  94 |    string memory _symbol,\n  95 |    IERC4626 _yieldVault,\n  96 |    PrizePool _prizePool,\n  97 |    address _claimer,\n  98 |    address _yieldFeeRecipient,\n  99 |    uint32 _yieldFeePercentage,\n 100 |    address _owner\n 101 |  ) external returns (PrizeVault) {\n  :  |\n     |      // @audit-issue Cache this type conversion result that is used in multiple locations\n 118 |      IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n  :  |\n     |      // @audit-issue Cache this type conversion result that is used in multiple locations\n 121 |      deployedVaults[address(_vault)] = true;\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)",
            "[121](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L121)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Simple checks for zero can be done using assembly to save gas",
      "description": "Using assembly for simple zero checks on unsigned integers can save gas due to lower-level, optimized operations. ",
      "gasSavings": 48,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use inline assembly\n 458 |  if (_totalAssets == 0) revert ZeroTotalAssets();\n\n     |  // @audit-issue Use inline assembly\n 612 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Use inline assembly\n 665 |  if (_amountOut == 0) revert LiquidationAmountOutZero();\n\n     |  // @audit-issue Use inline assembly\n 672 |  if (_yieldFeePercentage != 0) {\n\n     |  // @audit-issue Use inline assembly\n 844 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Use inline assembly\n 845 |  if (_assets == 0) revert DepositZeroAssets();\n\n     |  // @audit-issue Use inline assembly\n 894 |  if (_assets == 0) revert WithdrawZeroAssets();\n\n     |  // @audit-issue Use inline assembly\n 895 |  if (_shares == 0) revert BurnZeroShares();\n```",
          "loc": [
            "[458](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L458)",
            "[612](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L612)",
            "[665](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L665)",
            "[672](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L672)",
            "[844](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L844)",
            "[845](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L845)",
            "[894](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L894)",
            "[895](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L895)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Split `revert` checks to save gas",
      "description": "Splitting the conditions into two separate checks **2 gas**",
      "gasSavings": 2,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 679 |  if (_amountOut + _yieldFee > _availableYield) {\n 680 |      revert LiquidationExceedsAvailable(_amountOut + _yieldFee, _availableYield);\n 681 |  }\n```",
          "loc": [
            "[679-681](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L679-L681)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Stack variable is only used once",
      "description": "If the variable is only accessed once, it's cheaper to use the assigned value directly that one time, and save the **3 gas** the extra stack assignment would spend.",
      "gasSavings": 180,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n  :  |\n 329 |  function asset() external view returns (address) {\n  :  |\n 336 |  function totalAssets() public view returns (uint256) {\n  :  |\n 341 |  function convertToShares(uint256 _assets) public view returns (uint256) {\n  :  |\n 355 |  function convertToAssets(uint256 _shares) public view returns (uint256) {\n  :  |\n 374 |  function maxDeposit(address) public view returns (uint256) {\n  :  |\n 397 |  function maxMint(address _owner) public view returns (uint256) {\n  :  |\n 404 |  function maxWithdraw(address _owner) public view returns (uint256) {\n  :  |\n 415 |  function maxRedeem(address _owner) public view returns (uint256) {\n  :  |\n 441 |  function previewDeposit(uint256 _assets) public pure returns (uint256) {\n  :  |\n 447 |  function previewMint(uint256 _shares) public pure returns (uint256) {\n  :  |\n 454 |  function previewWithdraw(uint256 _assets) public view returns (uint256) {\n  :  |\n 470 |  function previewRedeem(uint256 _shares) public view returns (uint256) {\n  :  |\n 475 |  function deposit(uint256 _assets, address _receiver) external returns (uint256) {\n  :  |\n 482 |  function mint(uint256 _shares, address _receiver) external returns (uint256) {\n  :  |\n 493 |  ) external returns (uint256) {\n  :  |\n 504 |  ) external returns (uint256) {\n  :  |\n 531 |  ) external returns (uint256) {\n  :  |\n 552 |  function sponsor(uint256 _assets) external returns (uint256) {\n  :  |\n 573 |  function totalDebt() public view returns (uint256) {\n  :  |\n 584 |  function totalYieldBalance() public view returns (uint256) {\n  :  |\n 591 |  function availableYieldBalance() public view returns (uint256) {\n  :  |\n 597 |  function currentYieldBuffer() external view returns (uint256) {\n  :  |\n 631 |  function liquidatableBalanceOf(address _tokenOut) public view returns (uint256) {\n  :  |\n 660 |      address,\n  :  |\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n  :  |\n 706 |      bytes calldata\n  :  |\n 717 |  function targetOf(address) external view returns (address) {\n  :  |\n 725 |  ) external view returns (bool) {\n  :  |\n 772 |  function _tryGetAssetDecimals(IERC20 asset_) internal view returns (bool, uint8) {\n  :  |\n 790 |  function _totalDebt(uint256 _totalSupply) internal view returns (uint256) {\n  :  |\n 798 |  function _twabSupplyLimit(uint256 _totalSupply) internal pure returns (uint256) {\n  :  |\n 808 |  function _totalYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal pure returns (uint256) {\n  :  |\n 823 |  function _availableYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal view returns (uint256) {\n  :  |\n 921 |  function _maxYieldVaultWithdraw() internal view returns (uint256) {\n```",
          "loc": [
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[329](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L329)",
            "[336](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L336)",
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[355](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L355)",
            "[374](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L374)",
            "[374](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L374)",
            "[397](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L397)",
            "[404](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L404)",
            "[415](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L415)",
            "[441](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L441)",
            "[447](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L447)",
            "[454](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L454)",
            "[470](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L470)",
            "[475](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L475)",
            "[482](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L482)",
            "[493](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L493)",
            "[504](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L504)",
            "[531](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L531)",
            "[552](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L552)",
            "[573](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L573)",
            "[584](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L584)",
            "[591](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L591)",
            "[597](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L597)",
            "[631](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L631)",
            "[660](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L660)",
            "[664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L664)",
            "[706](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L706)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)",
            "[725](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L725)",
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)",
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)",
            "[790](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L790)",
            "[798](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L798)",
            "[808](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L808)",
            "[823](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L823)",
            "[921](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L921)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n 101 |  ) external returns (PrizeVault) {\n  :  |\n 136 |  function totalVaults() external view returns (uint256) {\n```",
          "loc": [
            "[101](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L101)",
            "[136](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L136)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  58 |  ) public view virtual override(ERC20) returns (uint256) {\n  :  |\n  63 |  function totalSupply() public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  82 |  ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L82)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n  22 |  function getHooks(address account) external view returns (VaultHooks memory) {\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L22)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n  32 |  ) external returns (address);\n```",
          "loc": [
            "[32](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L32)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Subtraction can potentially be marked `unchecked` to save gas",
      "description": "In Solidity 0.8.x and above, arithmetic operations like subtraction automatically check for underflows and overflows, and revert the transaction if such a condition is met. This built-in safety feature provides a layer of security against potential numerical errors. However, these automatic checks also come with additional gas costs.\r\n\r\nIn some situations, you may already have a guard condition, like a require() statement or an if statement, that ensures the safety of the arithmetic operation. In such cases, the automatic check becomes redundant and leads to unnecessary gas expenditure.\r\n\r\nFor example, you may have a function that subtracts a smaller number from a larger one, and you may have already verified that the smaller number is indeed smaller. In this case, you're already sure that the subtraction operation won't underflow, so there's no need for the automatic check.\r\n\r\nIn these situations, you can use the unchecked { } block around the subtraction operation to skip the automatic check. This will reduce gas costs and make your contract more efficient, without sacrificing security. However, it's critical to use unchecked { } only when you're absolutely sure that the operation is safe.",
      "gasSavings": 80,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 388 |  _maxDeposit = _maxYieldVaultDeposit - _latentBalance;\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 649 |  .mulDiv(FEE_PRECISION - yieldFeePercentage, FEE_PRECISION);\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 800 |  return type(uint96).max - _totalSupply;\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 813 |  return _totalAssets - totalDebt_;\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 828 |  return totalYieldBalance_ - _yieldBuffer;\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 934 |  uint256 _yieldVaultShares = yieldVault.previewWithdraw(_assets - _latentAssets);\n```",
          "loc": [
            "[388](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L388)",
            "[649](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L649)",
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)",
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)",
            "[800](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L800)",
            "[813](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L813)",
            "[828](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L828)",
            "[934](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L934)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "The result of function calls should be cached rather than re-calling the function",
      "description": "The instances below point to the second+ call of the function within a single function.",
      "gasSavings": 28,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Called 2 times in _depositAndMint()\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n\n     |  // @audit-issue Called 2 times in _depositAndMint()\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n\n     |  // @audit-issue Called 2 times in _depositAndMint()\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n\n     |  // @audit-issue Called 2 times in _depositAndMint()\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n```",
          "loc": [
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)",
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)",
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)",
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Usage of non-`uint256`/`int256` types uses more gas",
      "description": "When using a smaller int/uint type it first needs to be converted to it's 256 bit counterpart to be operated upon, this increases the gas cost and thus should be avoided. However it does make sense to use smaller int/uint values within structs provided you pack the struct properly. ",
      "gasSavings": 1166,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider u/int256\n  74 |  uint32 public constant FEE_PRECISION = 1e9;\n\n     |  // @audit-issue Consider u/int256\n  80 |  uint32 public constant MAX_YIELD_FEE = 9e8;\n\n     |  // @audit-issue Consider u/int256\n 119 |  uint32 public yieldFeePercentage;\n\n     |  // @audit-issue Consider u/int256\n 138 |  uint8 private immutable _underlyingDecimals;\n\n     |  // @audit-issue Consider u/int256\n 296 |  uint32 yieldFeePercentage_,\n\n     |  // @audit-issue Consider u/int256\n 304 |  (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\n\n     |  // @audit-issue Consider u/int256\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n\n     |  // @audit-issue Consider u/int256\n 528 |  uint8 _v,\n\n     |  // @audit-issue Consider u/int256\n 668 |  uint32 _yieldFeePercentage = yieldFeePercentage;\n\n     |  // @audit-issue Consider u/int256\n 753 |  function setYieldFeePercentage(uint32 _yieldFeePercentage) external onlyOwner {\n\n     |  // @audit-issue Consider u/int256\n 772 |  function _tryGetAssetDecimals(IERC20 asset_) internal view returns (bool, uint8) {\n\n     |  // @audit-issue Consider u/int256\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L74)",
            "[80](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L80)",
            "[119](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L119)",
            "[138](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L138)",
            "[296](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L296)",
            "[304](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L304)",
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[528](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L528)",
            "[668](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L668)",
            "[753](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L753)",
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)",
            "[947](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L947)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider u/int256\n  99 |  uint32 _yieldFeePercentage,\n```",
          "loc": [
            "[99](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L99)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider u/int256\n  21 |  uint24 public constant HOOK_GAS = 150_000;\n\n     |  // @audit-issue Consider u/int256\n  78 |  uint8 _tier,\n\n     |  // @audit-issue Consider u/int256\n  79 |  uint32 _prizeIndex,\n\n     |  // @audit-issue Consider u/int256\n  80 |  uint96 _reward,\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L21)",
            "[78](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L78)",
            "[79](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L79)",
            "[80](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L80)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Consider u/int256\n  28 |  uint8 tier,\n\n     |  // @audit-issue Consider u/int256\n  29 |  uint32 prizeIndex,\n\n     |  // @audit-issue Consider u/int256\n  30 |  uint96 reward,\n\n     |  // @audit-issue Consider u/int256\n  42 |  uint8 tier,\n\n     |  // @audit-issue Consider u/int256\n  43 |  uint32 prizeIndex,\n```",
          "loc": [
            "[28](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L28)",
            "[29](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L29)",
            "[30](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L30)",
            "[42](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L42)",
            "[43](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L43)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use != 0 instead of > 0",
      "description": "If possible, i.e. the range of the variable precludes negative values, consider using `!= 0` to save gas.",
      "gasSavings": 3,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use != 0 instead\n 684 |  if (_yieldFee > 0) {\n```",
          "loc": [
            "[684](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L684)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use Solady library where possible to save gas",
      "description": "Utilizing gas-optimized math functions from libraries like [Solady](https://github.com/Vectorized/solady/blob/main/src/utils/FixedPointMathLib.sol) can lead to more efficient smart contracts.\r\nThis is particularly beneficial in contracts where these operations are frequently used.\r\n\r\nFor example, `(x * WAD) / y` can be replaced with Solady's `divWad()`.\r\n",
      "gasSavings": 2,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider using the Solady library for this arithmetic\n 672 |  if (_yieldFeePercentage != 0) {\n 673 |      // The yield fee is calculated as a portion of the total yield being consumed, such that \n 674 |      // `total = amountOut + yieldFee` and `yieldFee / total = yieldFeePercentage`. \n 675 |      _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n 676 |  }\n\n     |  // @audit-issue Consider using the Solady library for this arithmetic\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n```",
          "loc": [
            "[672-676](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L672-L676)",
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `calldata` instead of `memory` for function arguments that are read only",
      "description": "When a function with a `memory` array is called externally, the `abi.decode()` step has to use a for-loop to copy each index of the `calldata` to the `memory` index. Each iteration of this for-loop costs at least 60 gas (i.e. 60 * `<mem_array>.length`). Using calldata directly, removes the need for such a loop in the contract code and runtime execution.  \r\n                    \r\nIf the array is passed to an `internal` function which passes the array to another `internal` function where the array is modified and therefore `memory` is used in the `external` call, it's still more gas-efficient to use `calldata` when the external function uses modifiers, since the modifiers may prevent the `internal` functions from being called. `Structs` have the same overhead as an array of length one.",
      "gasSavings": 300,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider switching `name_` param to `calldata`\n 290 |  string memory name_,\n     |  // @audit-issue Consider switching `symbol_` param to `calldata`\n 291 |  string memory symbol_,\n```",
          "loc": [
            "[290](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L290)",
            "[291](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L291)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider switching `_name` param to `calldata`\n  93 |  string memory _name,\n     |  // @audit-issue Consider switching `_symbol` param to `calldata`\n  94 |  string memory _symbol,\n```",
          "loc": [
            "[93](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L93)",
            "[94](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L94)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider switching `name_` param to `calldata`\n  43 |  string memory name_,\n     |  // @audit-issue Consider switching `symbol_` param to `calldata`\n  44 |  string memory symbol_,\n```",
          "loc": [
            "[43](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L43)",
            "[44](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L44)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `private` rather than `public` for constants",
      "description": "If needed, the values can be read from the verified contract source code, or if there are multiple values there can be a single getter function that [returns a tuple](https://github.com/code-423n4/2022-08-frax/blob/90f55a9ce4e25bceed3a74290b854341d8de6afa/src/contracts/FraxlendPair.sol#L156-L178) of the values of all currently-public constants. Saves **3406-3606 gas** in deployment gas due to the compiler not having to create non-payable getter functions for deployment calldata, not having to store the bytes of the value outside of where it's used, and not adding another entry to the method ID table.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Switch visibility to private\n  74 |  uint32 public constant FEE_PRECISION = 1e9;\n\n     |  // @audit-issue Switch visibility to private\n  80 |  uint32 public constant MAX_YIELD_FEE = 9e8;\n```",
          "loc": [
            "[74](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L74)",
            "[80](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L80)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Switch visibility to private\n  63 |  uint256 public constant YIELD_BUFFER = 1e5;\n```",
          "loc": [
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Switch visibility to private\n  21 |  uint24 public constant HOOK_GAS = 150_000;\n```",
          "loc": [
            "[21](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L21)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use `uint256(1)`/`uint256(2)` instead of `true`/`false` to save gas for changes",
      "description": "Avoids a Gsset (**20000 gas**) when changing from `false` to `true`, after having been `true` in the past. Since most of the bools aren't changed twice in one transaction, I've counted the amount of gas as half of the full amount, for each variable.",
      "gasSavings": 8550,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n  69 |  mapping(address vault => bool deployedByFactory) public deployedVaults;\n```",
          "loc": [
            "[69](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L69)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to calculate hashes",
      "description": "If the arguments to the encode call can fit into the scratch space (two words or fewer), then it's more efficient to use assembly to generate the hash (**80 gas**):\r\n                    \r\n```solidity\r\n    keccak256(abi.encodePacked(a, b)); }\r\n```\r\n\r\nto\r\n\r\n```solidity \r\n    assembly {\r\n        mstore(0x00, a)\r\n        mstore(0x20, b)\r\n        let result := keccak256(0x00, 0x40)\r\n    }\r\n```",
      "gasSavings": 80,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Use assembly to calcuate hashes\n 103 |  salt: keccak256(abi.encode(msg.sender, deployerNonces[msg.sender]++))\n```",
          "loc": [
            "[103](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L103)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to perform external calls, in order to save gas",
      "description": "Using Solidity's assembly scratch space for constructing calldata in external calls with one or two arguments can be a gas-efficient approach. This method leverages the designated memory area (the first 64 bytes of memory) for temporary data storage during assembly operations. By directly writing arguments into this scratch space, it eliminates the need for additional memory allocation typically required for calldata preparation. This technique can lead to notable gas savings, especially in high-frequency or gas-sensitive operations. However, it requires careful implementation to avoid data corruption and should be used with a thorough understanding of low-level EVM operations and memory handling. Proper testing and validation are crucial when employing such optimizations.",
      "gasSavings": 260,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Save gas by call this in assembly\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 303 |  IERC20 asset_ = IERC20(yieldVault_.asset());\n\n     |  // @audit-issue Save gas by call this in assembly\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 382 |  uint256 _latentBalance = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 383 |  uint256 _maxYieldVaultDeposit = yieldVault.maxDeposit(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 405 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 416 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 539 |  if (_asset.allowance(_owner, address(this)) != _assets) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 558 |  if (twabController.delegateOf(address(this), _owner) != SPONSORSHIP_ADDRESS) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 559 |  twabController.sponsor(_owner);\n\n     |  // @audit-issue Save gas by call this in assembly\n 639 |  _maxAmountOut = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n```",
          "loc": [
            "[299](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L299)",
            "[303](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L303)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[382](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L382)",
            "[383](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L383)",
            "[405](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L405)",
            "[416](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L416)",
            "[539](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L539)",
            "[558](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L558)",
            "[559](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L559)",
            "[639](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L639)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use assembly to write storage values",
      "description": "Instead of:\r\n                    \r\n```solidity\r\nowner = _newOwner\r\n```\r\n\r\nwrite:\r\n\r\n```solidity\r\nassembly { sstore(owner.slot, _newOwner) }\r\n```\r\n",
      "gasSavings": 154,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 305 |  _underlyingDecimals = success ? assetDecimals : 18;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 306 |  _asset = asset_;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 308 |  yieldVault = yieldVault_;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 309 |  yieldBuffer = yieldBuffer_;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 617 |  yieldFeeBalance -= _yieldFeeBalance;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 685 |  yieldFeeBalance += _yieldFee;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 745 |  liquidationPair = _liquidationPair;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 951 |  yieldFeePercentage = _yieldFeePercentage;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 959 |  yieldFeeRecipient = _yieldFeeRecipient;\n```",
          "loc": [
            "[305](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L305)",
            "[306](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L306)",
            "[308](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L308)",
            "[309](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L309)",
            "[617](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L617)",
            "[685](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L685)",
            "[745](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L745)",
            "[951](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L951)",
            "[959](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L959)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 121 |  deployedVaults[address(_vault)] = true;\n```",
          "loc": [
            "[121](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L121)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n  48 |  twabController = twabController_;\n```",
          "loc": [
            "[48](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L48)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n  66 |  prizePool = prizePool_;\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n 130 |  claimer = _claimer;\n```",
          "loc": [
            "[66](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L66)",
            "[130](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L130)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Use assembly `sstore` to save gas\n  30 |  _hooks[msg.sender] = hooks;\n```",
          "loc": [
            "[30](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L30)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use more recent OpenZeppelin version for gas boost",
      "description": "OpenZeppelin version 4.9.0+ provides many small gas optimizations, see [here](https://github.com/OpenZeppelin/openzeppelin-contracts/releases/tag/v4.9.0) for more info.",
      "gasSavings": 0,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4626.sol)\"\n   4 |  import { IERC4626 } from \"openzeppelin/interfaces/IERC4626.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.3 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.3) (token/ERC20/utils/SafeERC20.sol)\"\n   5 |  import { SafeERC20, IERC20Permit } from \"openzeppelin/token/ERC20/utils/SafeERC20.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\"\n   6 |  import { ERC20, IERC20, IERC20Metadata } from \"openzeppelin/token/ERC20/ERC20.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\"\n   7 |  import { Math } from \"openzeppelin/utils/math/Math.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L6)",
            "[7](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L7)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/ERC4626.sol)\"\n   4 |  import { IERC20, IERC4626 } from \"openzeppelin/token/ERC20/extensions/ERC4626.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue OpenZeppelin 4.9.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/ERC20.sol)\"\n   4 |  import { ERC20 } from \"openzeppelin/token/ERC20/ERC20.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.9.4 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.9.4) (token/ERC20/extensions/ERC20Permit.sol)\"\n   5 |  import { ERC20Permit } from \"openzeppelin/token/ERC20/extensions/ERC20Permit.sol\";\n\n     |  // @audit-issue OpenZeppelin 4.8.0 can be updated to 4.9.5\n     |  // \"// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\"\n   6 |  import { SafeCast } from \"openzeppelin/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L6)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use named `return` parameters",
      "description": "Using named return values instead of explicitly calling `return` saves ~13 execution gas per call and >1000 deployment gas per instance.",
      "gasSavings": 520,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Provide names for all return parameters\n 320 |  function decimals() public view override(ERC20, IERC20Metadata) returns (uint8) {\n\n     |  // @audit-issue Provide names for all return parameters\n 329 |  function asset() external view returns (address) {\n\n     |  // @audit-issue Provide names for all return parameters\n 336 |  function totalAssets() public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 341 |  function convertToShares(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 355 |  function convertToAssets(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 374 |  function maxDeposit(address) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 397 |  function maxMint(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 404 |  function maxWithdraw(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 415 |  function maxRedeem(address _owner) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 441 |  function previewDeposit(uint256 _assets) public pure returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 447 |  function previewMint(uint256 _shares) public pure returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 454 |  function previewWithdraw(uint256 _assets) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 470 |  function previewRedeem(uint256 _shares) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 475 |  function deposit(uint256 _assets, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 482 |  function mint(uint256 _shares, address _receiver) external returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 489 |  function withdraw(\n 490 |      uint256 _assets,\n 491 |      address _receiver,\n 492 |      address _owner\n 493 |  ) external returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 500 |  function redeem(\n 501 |      uint256 _shares,\n 502 |      address _receiver,\n 503 |      address _owner\n 504 |  ) external returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 524 |  function depositWithPermit(\n 525 |      uint256 _assets,\n 526 |      address _owner,\n 527 |      uint256 _deadline,\n 528 |      uint8 _v,\n 529 |      bytes32 _r,\n 530 |      bytes32 _s\n 531 |  ) external returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 552 |  function sponsor(uint256 _assets) external returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 573 |  function totalDebt() public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 584 |  function totalYieldBalance() public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 591 |  function availableYieldBalance() public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 597 |  function currentYieldBuffer() external view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 631 |  function liquidatableBalanceOf(address _tokenOut) public view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 659 |  function transferTokensOut(\n 660 |      address,\n 661 |      address _receiver,\n 662 |      address _tokenOut,\n 663 |      uint256 _amountOut\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n\n     |  // @audit-issue Provide names for all return parameters\n 717 |  function targetOf(address) external view returns (address) {\n\n     |  // @audit-issue Provide names for all return parameters\n 722 |  function isLiquidationPair(\n 723 |      address _tokenOut,\n 724 |      address _liquidationPair\n 725 |  ) external view returns (bool) {\n\n     |  // @audit-issue Provide names for all return parameters\n 772 |  function _tryGetAssetDecimals(IERC20 asset_) internal view returns (bool, uint8) {\n\n     |  // @audit-issue Provide names for all return parameters\n 790 |  function _totalDebt(uint256 _totalSupply) internal view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 798 |  function _twabSupplyLimit(uint256 _totalSupply) internal pure returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 808 |  function _totalYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal pure returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 823 |  function _availableYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal view returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n 921 |  function _maxYieldVaultWithdraw() internal view returns (uint256) {\n```",
          "loc": [
            "[320](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L320)",
            "[329](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L329)",
            "[336](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L336)",
            "[341](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L341)",
            "[355](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L355)",
            "[374](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L374)",
            "[397](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L397)",
            "[404](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L404)",
            "[415](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L415)",
            "[441](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L441)",
            "[447](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L447)",
            "[454](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L454)",
            "[470](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L470)",
            "[475](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L475)",
            "[482](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L482)",
            "[489-493](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L489-L493)",
            "[500-504](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L500-L504)",
            "[524-531](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L524-L531)",
            "[552](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L552)",
            "[573](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L573)",
            "[584](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L584)",
            "[591](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L591)",
            "[597](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L597)",
            "[631](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L631)",
            "[659-664](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L659-L664)",
            "[717](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L717)",
            "[722-725](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L722-L725)",
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)",
            "[790](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L790)",
            "[798](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L798)",
            "[808](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L808)",
            "[823](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L823)",
            "[921](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L921)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Provide names for all return parameters\n  92 |  function deployVault(\n  93 |    string memory _name,\n  94 |    string memory _symbol,\n  95 |    IERC4626 _yieldVault,\n  96 |    PrizePool _prizePool,\n  97 |    address _claimer,\n  98 |    address _yieldFeeRecipient,\n  99 |    uint32 _yieldFeePercentage,\n 100 |    address _owner\n 101 |  ) external returns (PrizeVault) {\n\n     |  // @audit-issue Provide names for all return parameters\n 136 |  function totalVaults() external view returns (uint256) {\n```",
          "loc": [
            "[92-101](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L92-L101)",
            "[136](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L136)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Provide names for all return parameters\n  56 |  function balanceOf(\n  57 |      address _account\n  58 |  ) public view virtual override(ERC20) returns (uint256) {\n\n     |  // @audit-issue Provide names for all return parameters\n  63 |  function totalSupply() public view virtual override(ERC20) returns (uint256) {\n```",
          "loc": [
            "[56-58](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L56-L58)",
            "[63](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L63)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Provide names for all return parameters\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n```",
          "loc": [
            "[76-82](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L76-L82)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Provide names for all return parameters\n  22 |  function getHooks(address account) external view returns (VaultHooks memory) {\n```",
          "loc": [
            "[22](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L22)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue Provide names for all return parameters\n  26 |  function beforeClaimPrize(\n  27 |      address winner,\n  28 |      uint8 tier,\n  29 |      uint32 prizeIndex,\n  30 |      uint96 reward,\n  31 |      address rewardRecipient\n  32 |  ) external returns (address);\n```",
          "loc": [
            "[26-32](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L26-L32)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Use nested `if`s instead of `&&`",
      "description": "Optimization of condition checks in your smart contract is a crucial aspect in ensuring gas efficiency. Specifically, substituting multiple `&&` checks with nested `if` statements can lead to substantial gas savings.\r\n\r\nWhen evaluating multiple conditions within a single `if` statement using the `&&` operator, each condition will consume gas even if a preceding condition fails. However, if these checks are broken down into nested `if` statements, execution halts as soon as a condition fails, saving the gas that would have been consumed by subsequent checks.\r\n\r\nThis practice is especially beneficial in scenarios where the `if` statement isn't followed by an `else` statement. The reason being, when an `else` statement is present, all conditions must be checked regardless to determine the correct branch of execution.\r\n\r\nBy reworking your code to utilize nested `if` statements, you can optimize gas usage, reduce execution cost, and enhance your contract's performance.",
      "gasSavings": 15,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Save gas by using nested `if`\n 776 |  if (success && encodedDecimals.length >= 32) {\n```",
          "loc": [
            "[776](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L776)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "Using `bool`s for storage incurs overhead",
      "description": "```solidity\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n```\r\nhttps://github.com/OpenZeppelin/openzeppelin-contracts/blob/58f635312aa21f947cae5f8578638a85aa2519f5/contracts/security/ReentrancyGuard.sol#L23-L27\r\nUse `uint256(0)` and `uint256(1)` for true/false to avoid a Gwarmaccess (**[100 gas](https://gist.github.com/IllIllI000/1b70014db712f8572a72378321250058)**) for the extra SLOAD",
      "gasSavings": 100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n  69 |  mapping(address vault => bool deployedByFactory) public deployedVaults;\n```",
          "loc": [
            "[69](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L69)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`++i` costs less gas than `i++`, especially when it's used in `for`-loops (`--i`/`i--` too)",
      "description": "Try pre-increment (`++i`) or pre-decrement (`--i`).",
      "gasSavings": 5,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Switch to the pre-increment/decrement form\n 103 |  salt: keccak256(abi.encode(msg.sender, deployerNonces[msg.sender]++))\n```",
          "loc": [
            "[103](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L103)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`<x> += <y>` costs more gas than `<x> = <x> + <y>` for state variables",
      "description": "Using the addition operator instead of plus-equals saves **[113 gas](https://gist.github.com/IllIllI000/cbbfb267425b898e5be734d4008d4fe8)**",
      "gasSavings": 226,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Switch to <x> + <y> and <x> - <y>\n 617 |  yieldFeeBalance -= _yieldFeeBalance;\n\n     |  // @audit-issue Switch to <x> + <y> and <x> - <y>\n 685 |  yieldFeeBalance += _yieldFee;\n```",
          "loc": [
            "[617](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L617)",
            "[685](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L685)"
          ]
        }
      ]
    },
    {
      "severity": "Gas",
      "title": "`abi.encode()` is less efficient than `abi.encodepacked()` for non-address arguments",
      "description": "See for more information: https://github.com/ConnorBlockchain/Solidity-Encode-Gas-Comparison",
      "gasSavings": 100,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider `abi.encodePacked()`\n 103 |  salt: keccak256(abi.encode(msg.sender, deployerNonces[msg.sender]++))\n```",
          "loc": [
            "[103](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L103)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "All `verbatim` blocks are considered identical by deduplicator and can incorrectly be unified",
      "description": "> The below source files do not trigger the bug as they do not use `verbatim` in a Yul `assembly` block, or the compiler version is not applicable (`>= 0.8.5`).\n\nThe block deduplicator is a step of the opcode-based optimizer which identifies equivalent assembly blocks and merges them into a single one. However, when blocks contained `verbatim`, their comparison was performed incorrectly, leading to the collapse of assembly blocks which are identical except for the contents of the ``verbatim`` items. Since `verbatim` is only available in Yul, compilation of Solidity sources is not affected. For more details check the following [link](https://blog.soliditylang.org/2023/11/08/verbatim-invalid-deduplication-bug/).\r\n                    \r\nThis bug affects all versions of Solidity from 0.8.5 onwards, and has not yet been fixed.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Complex casting",
      "description": "> Address/contract conversions are not generally considered complex\n\nConsider whether the number of casts is really necessary, or whether using a different type would be more appropriate. Alternatively, add comments to explain in detail why the casts are necessary, and any implicit reasons why the cast does not introduce an overflow.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Reconsider complex casting\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n```",
          "loc": [
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Consider using SMTChecker",
      "description": "> Exactly the same as *'Consider adding formal verification proofs'*\n\n",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L1)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n     |  // @audit-issue SMT checker was not detected as enabled for this file\n   1 |  // SPDX-License-Identifier: MIT\n```",
          "loc": [
            "[1](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L1)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Consider using named function arguments",
      "description": "> These function calls involve fewer than 4 parameters, and are unlikely to be benefit from named parameters.\n\nNamed function calls in Solidity greatly improve code readability by explicitly mapping arguments to their respective parameter names. This clarity becomes critical when dealing with functions that have numerous or complex parameters, reducing potential errors due to misordered arguments. Therefore, adopting named function calls contributes to more maintainable and less error-prone code. The following findings are for function calls with 4 or more praameters.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider named parameters\n 303 |  IERC20 asset_ = IERC20(yieldVault_.asset());\n\n     |  // @audit-issue Consider named parameters\n 304 |  (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\n\n     |  // @audit-issue Consider named parameters\n 311 |  _setYieldFeeRecipient(yieldFeeRecipient_);\n\n     |  // @audit-issue Consider named parameters\n 312 |  _setYieldFeePercentage(yieldFeePercentage_);\n\n     |  // @audit-issue Consider named parameters\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Consider named parameters\n 343 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Consider named parameters\n 357 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Consider named parameters\n 377 |  if (totalAssets() < totalDebt_) return 0;\n\n     |  // @audit-issue Consider named parameters\n 408 |  uint256 _ownerAssets = convertToAssets(balanceOf(_owner));\n\n     |  // @audit-issue Consider named parameters\n 423 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Consider named parameters\n 455 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Consider named parameters\n 458 |  if (_totalAssets == 0) revert ZeroTotalAssets();\n\n     |  // @audit-issue Consider named parameters\n 471 |  return convertToAssets(_shares);\n\n     |  // @audit-issue Consider named parameters\n 585 |  return _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Consider named parameters\n 592 |  return _availableYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Consider named parameters\n 598 |  uint256 totalYieldBalance_ = _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Consider named parameters\n 619 |  _mint(msg.sender, _shares);\n\n     |  // @audit-issue Consider named parameters\n 648 |  _availableYieldBalance(totalAssets(), _totalDebt(_totalSupply))\n\n     |  // @audit-issue Consider named parameters\n 690 |  _withdraw(_receiver, _amountOut);            \n\n     |  // @audit-issue Consider named parameters\n 692 |  _mint(_receiver, _amountOut);\n\n     |  // @audit-issue Consider named parameters\n 736 |  _setClaimer(_claimer);\n\n     |  // @audit-issue Consider named parameters\n 754 |  _setYieldFeePercentage(_yieldFeePercentage);\n\n     |  // @audit-issue Consider named parameters\n 760 |  _setYieldFeeRecipient(_yieldFeeRecipient);\n\n     |  // @audit-issue Consider named parameters\n 845 |  if (_assets == 0) revert DepositZeroAssets();\n\n     |  // @audit-issue Consider named parameters\n 866 |  uint256 _assetsUsed = yieldVault.mint(_yieldVaultShares, address(this));\n\n     |  // @audit-issue Consider named parameters\n 872 |  _mint(_receiver, _shares);\n\n     |  // @audit-issue Consider named parameters\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n\n     |  // @audit-issue Consider named parameters\n 874 |  if (totalAssets() < totalDebt()) revert LossyDeposit(totalAssets(), totalDebt());\n\n     |  // @audit-issue Consider named parameters\n 894 |  if (_assets == 0) revert WithdrawZeroAssets();\n\n     |  // @audit-issue Consider named parameters\n 906 |  _burn(_owner, _shares);\n\n     |  // @audit-issue Consider named parameters\n 907 |  _withdraw(_receiver, _assets);\n\n     |  // @audit-issue Consider named parameters\n 922 |  return yieldVault.convertToAssets(yieldVault.maxRedeem(address(this)));\n\n     |  // @audit-issue Consider named parameters\n 939 |  _asset.transfer(_receiver, _assets);\n```",
          "loc": [
            "[303](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L303)",
            "[304](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L304)",
            "[311](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L311)",
            "[312](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L312)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[343](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L343)",
            "[357](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L357)",
            "[377](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L377)",
            "[408](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L408)",
            "[423](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L423)",
            "[455](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L455)",
            "[458](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L458)",
            "[471](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L471)",
            "[585](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L585)",
            "[592](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L592)",
            "[598](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L598)",
            "[619](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L619)",
            "[648](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L648)",
            "[690](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L690)",
            "[692](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L692)",
            "[736](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L736)",
            "[754](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L754)",
            "[760](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L760)",
            "[845](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L845)",
            "[866](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L866)",
            "[872](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L872)",
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)",
            "[874](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L874)",
            "[894](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L894)",
            "[906](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L906)",
            "[907](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L907)",
            "[922](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L922)",
            "[939](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L939)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Consider named parameters\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n\n     |  // @audit-issue Consider named parameters\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)",
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Consider named parameters\n  77 |  twabController.mint(_receiver, SafeCast.toUint96(_amount));\n\n     |  // @audit-issue Consider named parameters\n  88 |  twabController.burn(_owner, SafeCast.toUint96(_amount));\n\n     |  // @audit-issue Consider named parameters\n 101 |  twabController.transfer(_from, _to, SafeCast.toUint96(_amount));\n```",
          "loc": [
            "[77](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L77)",
            "[88](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L88)",
            "[101](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L101)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Consider named parameters\n  67 |  _setClaimer(claimer_);\n```",
          "loc": [
            "[67](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L67)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Consider using solady's \"FixedPointMathLib\"",
      "description": "> These instances are duplicates of *'Consider Using Solady's Gas Optimized Lib for Math'*, or are incorrect e.g. simple division or multiplication.\n\nIn instances where many similar mathematical operations are performed, consider using Solday's math lib to benefit from the gas saving it can introduce.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 672 |  if (_yieldFeePercentage != 0) {\n 673 |      // The yield fee is calculated as a portion of the total yield being consumed, such that \n 674 |      // `total = amountOut + yieldFee` and `yieldFee / total = yieldFeePercentage`. \n 675 |      _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n 676 |  }\n\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n```",
          "loc": [
            "[672-676](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L672-L676)",
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Contracts and libraries should use fixed compiler versions",
      "description": "> This finding only applies to contracts and libraries\n\nTo prevent the actual contracts being deployed from behaving differently depending on the compiler version, it is recommended to use fixed solidity versions for contracts and libraries.\r\n\r\nAlthough we can configure a specific version through config (like hardhat, forge config files), it is recommended to **set the fixed version in the solidity pragma directly** before deploying to the mainnet.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Contracts are vulnerable to fee-on-transfer accounting-related issues",
      "description": "> The readme **specifically excludes** fee-on-transfer tokens\n\nSome tokens take a transfer fee (e.g. STA, PAXG), some do not currently charge a fee but may do so in the future (e.g. USDT, USDC). The functions below transfer funds from the caller to the receiver via `transferFrom()`, but do not ensure that the actual number of tokens received is the same as the input amount to the transfer. If the token is a fee-on-transfer token, the balance after the transfer will be smaller than expected, leading to accounting issues. Even if there are checks later, related to a secondary transfer, an attacker may be able to use latent funds (e.g. mistakenly sent by another user) in order to get a free credit.\r\n\r\nOne way to solve this problem is to measure the balance before and after the transfer, and use the difference as the amount, rather than the stated amount.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Check balance before & after vs. expected\n 854 |  _asset.safeTransferFrom(\n 855 |      _caller,\n 856 |      address(this),\n 857 |      _assets\n 858 |  );\n```",
          "loc": [
            "[854-858](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L854-L858)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Check balance before & after vs. expected\n 118 |  IERC20(_vault.asset()).transferFrom(msg.sender, address(_vault), YIELD_BUFFER);\n```",
          "loc": [
            "[118](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L118)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Floating pragma should be avoided",
      "description": "> These are either duplicates of *'Fixed Compiler Version Required for Non-Library/Interface Files'* or not floating pragmas at all.\n\n",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Invalid or already covered elsewhere\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n     |  // @audit-issue Invalid or already covered elsewhere\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n     |  // @audit-issue Invalid or already covered elsewhere\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n     |  // @audit-issue Invalid or already covered elsewhere\n   2 |  pragma solidity ^0.8.24;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L2)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Invalid or already covered elsewhere\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Lack of two-step update for critical functions",
      "description": "> It doesn't make sense to do a two-step update for non-address parameters, as there is no recipient to confirm. Instead, a timelock ought to be used for sensitive non-address parameter changes, to allow time to make corrections.\n\nCritical functions in Solidity contracts should follow a two-step procedure to enhance security, minimize human error, and ensure proper access control. By dividing sensitive operations into distinct phases, such as initiation and confirmation, developers can introduce a safeguard against unintended actions or unauthorized access.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 753 |  function setYieldFeePercentage(uint32 _yieldFeePercentage) external onlyOwner {\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n```",
          "loc": [
            "[753](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L753)",
            "[947](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L947)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Consider implementing two-step verification of the new value\n  29 |  function setHooks(VaultHooks calldata hooks) external {\n```",
          "loc": [
            "[29](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L29)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Natspec comments are missing from scope blocks",
      "description": "> NatSpec does not apply to scope blocks\n\n",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 344 |  if (_totalAssets >= totalDebt_) {\n\n 346 |  } else {\n\n 358 |  if (_totalAssets >= totalDebt_) {\n\n 360 |  } else {\n\n 384 |  if (_latentBalance >= _maxYieldVaultDeposit) {\n\n 386 |  } else {\n\n 422 |  if (_ownerShares > _maxWithdraw) {\n\n 425 |  if (_totalAssets >= totalDebt_) {\n\n 427 |  } else {\n\n 435 |  } else {\n\n 461 |  if (_totalAssets >= totalDebt_) {\n\n 463 |  } else {\n\n 532 |  if (_owner != msg.sender) {\n\n 539 |  if (_asset.allowance(_owner, address(this)) != _assets) {\n\n 558 |  if (twabController.delegateOf(address(this), _owner) != SPONSORSHIP_ADDRESS) {\n\n 600 |  if (totalYieldBalance_ >= _yieldBuffer) {\n\n 602 |  } else {\n\n 634 |  if (_tokenOut == address(this)) {\n\n 637 |  } else if (_tokenOut == address(_asset)) {\n\n 640 |  } else {\n\n 672 |  if (_yieldFeePercentage != 0) {\n\n 679 |  if (_amountOut + _yieldFee > _availableYield) {\n\n 684 |  if (_yieldFee > 0) {\n\n 689 |  if (_tokenOut == address(_asset)) {\n\n 691 |  } else if (_tokenOut == address(this)) {\n\n 693 |  } else {\n\n 709 |  if (_tokenIn != _prizeToken) {\n\n 776 |  if (success && encodedDecimals.length >= 32) {\n\n 778 |  if (returnedDecimals <= type(uint8).max) {\n\n 809 |  if (totalDebt_ >= _totalAssets) {\n\n 811 |  } else {\n\n 826 |  if (totalYieldBalance_ >= _yieldBuffer) {\n\n 830 |  } else {\n\n 867 |  if (_assetsUsed != _assetsWithDust) {\n\n 896 |  if (_caller != _owner) {\n\n 932 |  if (_assets > _latentAssets) {\n\n 938 |  if (_receiver != address(this)) {\n\n 948 |  if (_yieldFeePercentage > MAX_YIELD_FEE) {\n```",
          "loc": [
            "[344](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L344)",
            "[346](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L346)",
            "[358](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L358)",
            "[360](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L360)",
            "[384](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L384)",
            "[386](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L386)",
            "[422](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L422)",
            "[425](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L425)",
            "[427](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L427)",
            "[435](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L435)",
            "[461](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L461)",
            "[463](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L463)",
            "[532](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L532)",
            "[539](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L539)",
            "[558](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L558)",
            "[600](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L600)",
            "[602](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L602)",
            "[634](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L634)",
            "[637](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L637)",
            "[640](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L640)",
            "[672](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L672)",
            "[679](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L679)",
            "[684](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L684)",
            "[689](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L689)",
            "[691](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L691)",
            "[693](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L693)",
            "[709](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L709)",
            "[776](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L776)",
            "[778](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L778)",
            "[809](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L809)",
            "[811](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L811)",
            "[826](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L826)",
            "[830](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L830)",
            "[867](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L867)",
            "[896](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L896)",
            "[932](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L932)",
            "[938](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L938)",
            "[948](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L948)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  85 |  if (_hooks[_winner].useBeforeClaimPrize) {\n\n  93 |  } else {\n\n 108 |  if (_hooks[_winner].useAfterClaimPrize) {\n```",
          "loc": [
            "[85](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L85)",
            "[93](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L93)",
            "[108](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L108)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Natspec is missing from struct",
      "description": "> NatSpec does not apply to structs. While the compiler does not produce an error, there is no `devdoc` node in the output.\n\nNatSpec is not supported for `struct`. Test case:\r\n\r\n```solidity\r\n/// @title titlenatspec\r\n/// @dev devnatspec\r\n/// @param paramnatspec test\r\n/// @notice noticenatspec\r\nstruct A { // produces no `devdoc` node\r\n    uint256 a;\r\n}\r\n\r\n\r\n/// @title titlenatspec\r\n/// @dev devnatspec\r\n/// @notice noticenatspec\r\ncontract B { // produces a `devdoc` node\r\n    uint256 b;\r\n}\r\n```",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\n\n   8 |  struct VaultHooks {\n```",
          "loc": [
            "[8](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L8)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Optimize Gas by Splitting if() revert Statements",
      "description": "> This is completely incorrect; in Solidity,  the operators `||` and `&&` [apply the common short-circuiting rules](https://docs.soliditylang.org/en/latest/types.html#booleans)\n\nOptimizing gas in smart contracts is crucial for performance and cost-effectiveness. One strategy to achieve this is splitting if() statements accompanied by revert() into separate lines, rather than chaining them with the || (OR) boolean operator. This is because, in Solidity, when conditions are chained using ||, all conditions might get evaluated even if one of them is true, resulting in unnecessary gas consumption. By breaking them into separate if() statements, the contract will exit as soon as one condition is met, saving gas.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 776 |  if (success && encodedDecimals.length >= 32) {\n```",
          "loc": [
            "[776](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L776)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Revert statements within external and public functions can be used to perform DOS attacks",
      "description": "> This is generic, non-sensical, irrelevant encylopedia-style output from an LLM (e.g. ChatGPT) that does not highlight a specific issue.\n\nIn Solidity, 'revert' statements are used to undo changes and throw an exception when certain conditions are not met. However, in public and external functions, improper use of `revert` can be exploited for Denial of Service (DoS) attacks. An attacker can intentionally trigger these 'revert' conditions, causing legitimate transactions to consistently fail. For example, if a function relies on specific conditions from user input or contract state, an attacker could manipulate these to continually force reverts, blocking the function's execution. Therefore, it's crucial to design contract logic to handle exceptions properly and avoid scenarios where `revert` can be predictably triggered by malicious actors. This includes careful input validation and considering alternative design patterns that are less susceptible to such abuses.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 289 |  constructor(\n 290 |      string memory name_,\n 291 |      string memory symbol_,\n 292 |      IERC4626 yieldVault_,\n 293 |      PrizePool prizePool_,\n 294 |      address claimer_,\n 295 |      address yieldFeeRecipient_,\n 296 |      uint32 yieldFeePercentage_,\n 297 |      uint256 yieldBuffer_,\n 298 |      address owner_\n 299 |  ) TwabERC20(name_, symbol_, prizePool_.twabController()) Claimable(prizePool_, claimer_) Ownable(owner_) {\n 300 |      if (address(yieldVault_) == address(0)) revert YieldVaultZeroAddress();\n 301 |      if (owner_ == address(0)) revert OwnerZeroAddress();\n\n 454 |  function previewWithdraw(uint256 _assets) public view returns (uint256) {\n  :  |\n 458 |      if (_totalAssets == 0) revert ZeroTotalAssets();\n\n 524 |  function depositWithPermit(\n 525 |      uint256 _assets,\n 526 |      address _owner,\n 527 |      uint256 _deadline,\n 528 |      uint8 _v,\n 529 |      bytes32 _r,\n 530 |      bytes32 _s\n 531 |  ) external returns (uint256) {\n  :  |\n 533 |          revert PermitCallerNotOwner(msg.sender, _owner);\n\n 611 |  function claimYieldFeeShares(uint256 _shares) external onlyYieldFeeRecipient {\n 612 |      if (_shares == 0) revert MintZeroShares();\n  :  |\n 615 |      if (_shares > _yieldFeeBalance) revert SharesExceedsYieldFeeBalance(_shares, _yieldFeeBalance);\n\n 659 |  function transferTokensOut(\n 660 |      address,\n 661 |      address _receiver,\n 662 |      address _tokenOut,\n 663 |      uint256 _amountOut\n 664 |  ) public virtual onlyLiquidationPair returns (bytes memory) {\n 665 |      if (_amountOut == 0) revert LiquidationAmountOutZero();\n  :  |\n 680 |          revert LiquidationExceedsAvailable(_amountOut + _yieldFee, _availableYield);\n  :  |\n 694 |          revert LiquidationTokenOutNotSupported(_tokenOut);\n\n 703 |  function verifyTokensIn(\n 704 |      address _tokenIn,\n 705 |      uint256 _amountIn,\n 706 |      bytes calldata\n 707 |  ) external onlyLiquidationPair {\n  :  |\n 710 |          revert LiquidationTokenInNotPrizeToken(_tokenIn, _prizeToken);\n\n 742 |  function setLiquidationPair(address _liquidationPair) external onlyOwner {\n 743 |      if (address(_liquidationPair) == address(0)) revert LPZeroAddress();\n```",
          "loc": [
            "[300](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L300)",
            "[301](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L301)",
            "[458](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L458)",
            "[533](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L533)",
            "[612](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L612)",
            "[615](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L615)",
            "[665](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L665)",
            "[680](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L680)",
            "[694](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L694)",
            "[710](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L710)",
            "[743](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L743)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  42 |  constructor(\n  43 |      string memory name_,\n  44 |      string memory symbol_,\n  45 |      TwabController twabController_\n  46 |  ) ERC20(name_, symbol_) ERC20Permit(name_) {\n  47 |      if (address(0) == address(twabController_)) revert TwabControllerZeroAddress();\n```",
          "loc": [
            "[47](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L47)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  76 |  function claimPrize(\n  77 |      address _winner,\n  78 |      uint8 _tier,\n  79 |      uint32 _prizeIndex,\n  80 |      uint96 _reward,\n  81 |      address _rewardRecipient\n  82 |  ) external onlyClaimer returns (uint256) {\n  :  |\n  97 |      if (recipient == address(0)) revert ClaimRecipientZeroAddress();\n```",
          "loc": [
            "[97](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L97)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Solidity version 0.8.20 may not work on other chains due to `PUSH0`",
      "description": "> The `readme.md` specifically states L2s are **NOT** in scope, thus this finding is not applicable\n\nThe compiler for Solidity 0.8.20 switches the default target EVM version to [Shanghai](https://blog.soliditylang.org/2023/05/10/solidity-0.8.20-release-announcement/#important-note), which includes the new `PUSH0` op code. This op code may not yet be implemented on all L2s, so deployment on these chains will fail. To work around this issue, use an earlier [EVM](https://docs.soliditylang.org/en/v0.8.20/using-the-compiler.html?ref=zaryabs.com#setting-the-evm-version-to-target) [version](https://book.getfoundry.sh/reference/config/solidity-compiler#evm_version). While the project itself may or may not compile with 0.8.20, other projects with which it integrates, or which extend this project may, and those projects will have problems deploying these contracts/libraries.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/HookManager.sol\n\n     |  // @audit-issue Require Solidity 0.8.19 or lower\n   2 |  pragma solidity ^0.8.0;\n```",
          "loc": [
            "[2](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/HookManager.sol#L2)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Structs can be packed into fewer storage slots",
      "description": "> Cygnet's optimization algorithm couldn't improve this layout, carefully review any claims stating otherwise\n\nEach slot saved can avoid an extra Gsset (20000 gas) for the first setting of the struct. Subsequent reads as well as writes have smaller gas savings",
      "gasSavings": 2000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\nStruct VaultHooks\n\n     |  // @audit-issue Can't improve current layout of 1 slots!\n     |  // slot[0] = useAfterClaimPrize (bool/1 bytes), useBeforeClaimPrize (bool/1 bytes), implementation (contract/20 bytes)\n   8 |  struct VaultHooks {\n   9 |      bool useBeforeClaimPrize;\n  10 |      bool useAfterClaimPrize;\n  11 |      IVaultHooks implementation;\n  12 |  }\n```",
          "loc": [
            "[8-12](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L8-L12)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Structs can be packed into fewer storage slots by truncating timestamp bytes",
      "description": "> Cygnet's optimization algorithm couldn't improve this layout, carefully review any claims stating otherwise\n\nEach slot saved can avoid an extra Gsset (20000 gas) for the first setting of the struct. Subsequent reads as well as writes have smaller gas savings",
      "gasSavings": 2000,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/interfaces/IVaultHooks.sol\nStruct VaultHooks\n\n     |  // @audit-issue Can't improve current layout of 1 slots!\n     |  // slot[0] = useBeforeClaimPrize (bool/1 bytes), useAfterClaimPrize (bool/1 bytes), implementation (contract/20 bytes)\n   8 |  struct VaultHooks {\n   9 |      bool useBeforeClaimPrize;\n  10 |      bool useAfterClaimPrize;\n  11 |      IVaultHooks implementation;\n  12 |  }\n```",
          "loc": [
            "[8-12](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/interfaces/IVaultHooks.sol#L8-L12)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Trade-offs Between Modifiers and Internal Functions",
      "description": "> This is generic, non-sensical, irrelevant encylopedia-style output from an LLM (e.g. ChatGPT) that does not highlight a specific issue.\n\nIn Solidity, both modifiers and internal functions can be used to modularize and reuse code, but they have different trade-offs.\r\n\r\nModifiers are primarily used to augment the behavior of functions, often for checks or validations. They can access parameters of the function they modify and are integrated into the functionâ€™s code at compile time. This makes them syntactically cleaner for repetitive precondition checks. However, modifiers can sometimes lead to less readable code, especially when the logic is complex or when multiple modifiers are used on a single function.\r\n\r\nInternal functions, on the other hand, offer more flexibility. They can contain complex logic, return values, and be called from other functions. This makes them more suitable for reusable chunks of business logic. Since internal functions are separate entities, they can be more readable and easier to test in isolation compared to modifiers.\r\n\r\nUsing internal functions can result in slightly more gas consumption, as it involves an internal function call. However, this cost is usually minimal and can be a worthwhile trade-off for increased code clarity and maintainability.\r\n\r\nIn summary, while modifiers offer a concise way to include checks and simple logic across multiple functions, internal functions provide more flexibility and are better suited for complex and reusable code. The choice between the two should be based on the specific use case, considering factors like code complexity, readability, and gas efficiency.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n 772 |  function _tryGetAssetDecimals(IERC20 asset_) internal view returns (bool, uint8) {\n\n 790 |  function _totalDebt(uint256 _totalSupply) internal view returns (uint256) {\n\n 798 |  function _twabSupplyLimit(uint256 _totalSupply) internal pure returns (uint256) {\n\n 808 |  function _totalYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal pure returns (uint256) {\n\n 823 |  function _availableYieldBalance(uint256 _totalAssets, uint256 totalDebt_) internal view returns (uint256) {\n\n 843 |  function _depositAndMint(address _caller, address _receiver, uint256 _assets, uint256 _shares) internal {\n\n 887 |  function _burnAndWithdraw(\n 888 |      address _caller,\n 889 |      address _receiver,\n 890 |      address _owner,\n 891 |      uint256 _shares,\n 892 |      uint256 _assets\n 893 |  ) internal {\n\n 921 |  function _maxYieldVaultWithdraw() internal view returns (uint256) {\n\n 928 |  function _withdraw(address _receiver, uint256 _assets) internal {\n\n 947 |  function _setYieldFeePercentage(uint32 _yieldFeePercentage) internal {\n\n 958 |  function _setYieldFeeRecipient(address _yieldFeeRecipient) internal {\n\n 260 |  modifier onlyLiquidationPair() {\n\n 268 |  modifier onlyYieldFeeRecipient() {\n```",
          "loc": [
            "[772](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L772)",
            "[790](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L790)",
            "[798](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L798)",
            "[808](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L808)",
            "[823](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L823)",
            "[843](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L843)",
            "[887-893](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L887-L893)",
            "[921](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L921)",
            "[928](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L928)",
            "[947](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L947)",
            "[958](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L958)",
            "[260](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L260)",
            "[268](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L268)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n  76 |  function _mint(address _receiver, uint256 _amount) internal virtual override {\n\n  87 |  function _burn(address _owner, uint256 _amount) internal virtual override {\n\n 100 |  function _transfer(address _from, address _to, uint256 _amount) internal virtual override {\n```",
          "loc": [
            "[76](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L76)",
            "[87](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L87)",
            "[100](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L100)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/abstract/Claimable.sol\n\n  64 |  constructor(PrizePool prizePool_, address claimer_) {\n\n 128 |  function _setClaimer(address _claimer) internal {\n\n  52 |  modifier onlyClaimer() {\n```",
          "loc": [
            "[64](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L64)",
            "[128](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L128)",
            "[52](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/abstract/Claimable.sol#L52)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Upgradeable contract uses non-upgradeable version of the OpenZeppelin libraries/contracts",
      "description": "> This file doesn't contain any upgradeable contracts\n\nOpenZeppelin has an [Upgradeable](https://github.com/OpenZeppelin/openzeppelin-contracts-upgradeable/tree/master/contracts/utils) variants of each of its libraries and contracts, and upgradeable contracts should use those variants.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n   4 |  import { IERC4626 } from \"openzeppelin/interfaces/IERC4626.sol\";\n\n   5 |  import { SafeERC20, IERC20Permit } from \"openzeppelin/token/ERC20/utils/SafeERC20.sol\";\n\n   6 |  import { ERC20, IERC20, IERC20Metadata } from \"openzeppelin/token/ERC20/ERC20.sol\";\n\n   7 |  import { Math } from \"openzeppelin/utils/math/Math.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L6)",
            "[7](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L7)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n   4 |  import { IERC20, IERC4626 } from \"openzeppelin/token/ERC20/extensions/ERC4626.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L4)"
          ]
        },
        {
          "content": "```solidity\nFile: pt-v5-vault/src/TwabERC20.sol\n\n   4 |  import { ERC20 } from \"openzeppelin/token/ERC20/ERC20.sol\";\n\n   5 |  import { ERC20Permit } from \"openzeppelin/token/ERC20/extensions/ERC20Permit.sol\";\n\n   6 |  import { SafeCast } from \"openzeppelin/utils/math/SafeCast.sol\";\n```",
          "loc": [
            "[4](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L4)",
            "[5](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L5)",
            "[6](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/TwabERC20.sol#L6)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Use Unchecked for Divisions on Constant or Immutable Values",
      "description": "> Duplicate of *'Divisions which do not divide by -X cannot overflow or overflow so such operations can be unchecked to save gas'*\n\n",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Use unchecked to save gas, if possible\n 675 |  _yieldFee = (_amountOut * FEE_PRECISION) / (FEE_PRECISION - _yieldFeePercentage) - _amountOut;\n```",
          "loc": [
            "[675](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L675)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Use assembly to perform external calls, in order to save gas",
      "description": "> These function calls take more than 2 arguments, or are not external calls\n\nUsing Solidity's assembly scratch space for constructing calldata in external calls with one or two arguments can be a gas-efficient approach. This method leverages the designated memory area (the first 64 bytes of memory) for temporary data storage during assembly operations. By directly writing arguments into this scratch space, it eliminates the need for additional memory allocation typically required for calldata preparation. This technique can lead to notable gas savings, especially in high-frequency or gas-sensitive operations. However, it requires careful implementation to avoid data corruption and should be used with a thorough understanding of low-level EVM operations and memory handling. Proper testing and validation are crucial when employing such optimizations.",
      "gasSavings": 1720,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVault.sol\n\n     |  // @audit-issue Save gas by call this in assembly\n 262 |  revert CallerNotLP(msg.sender, liquidationPair);\n\n     |  // @audit-issue Save gas by call this in assembly\n 270 |  revert CallerNotYieldFeeRecipient(msg.sender, yieldFeeRecipient);\n\n     |  // @audit-issue Save gas by call this in assembly\n 300 |  if (address(yieldVault_) == address(0)) revert YieldVaultZeroAddress();\n\n     |  // @audit-issue Save gas by call this in assembly\n 300 |  if (address(yieldVault_) == address(0)) revert YieldVaultZeroAddress();\n\n     |  // @audit-issue Save gas by call this in assembly\n 300 |  if (address(yieldVault_) == address(0)) revert YieldVaultZeroAddress();\n\n     |  // @audit-issue Save gas by call this in assembly\n 301 |  if (owner_ == address(0)) revert OwnerZeroAddress();\n\n     |  // @audit-issue Save gas by call this in assembly\n 301 |  if (owner_ == address(0)) revert OwnerZeroAddress();\n\n     |  // @audit-issue Save gas by call this in assembly\n 303 |  IERC20 asset_ = IERC20(yieldVault_.asset());\n\n     |  // @audit-issue Save gas by call this in assembly\n 304 |  (bool success, uint8 assetDecimals) = _tryGetAssetDecimals(asset_);\n\n     |  // @audit-issue Save gas by call this in assembly\n 311 |  _setYieldFeeRecipient(yieldFeeRecipient_);\n\n     |  // @audit-issue Save gas by call this in assembly\n 312 |  _setYieldFeePercentage(yieldFeePercentage_);\n\n     |  // @audit-issue Save gas by call this in assembly\n 330 |  return address(_asset);\n\n     |  // @audit-issue Save gas by call this in assembly\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 337 |  return yieldVault.convertToAssets(yieldVault.balanceOf(address(this))) + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 342 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Save gas by call this in assembly\n 343 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Save gas by call this in assembly\n 350 |  return _assets.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Down);\n\n     |  // @audit-issue Save gas by call this in assembly\n 356 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Save gas by call this in assembly\n 357 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Save gas by call this in assembly\n 364 |  return _shares.mulDiv(_totalAssets, totalDebt_, Math.Rounding.Down);\n\n     |  // @audit-issue Save gas by call this in assembly\n 375 |  uint256 _totalSupply = totalSupply();\n\n     |  // @audit-issue Save gas by call this in assembly\n 376 |  uint256 totalDebt_ = _totalDebt(_totalSupply);\n\n     |  // @audit-issue Save gas by call this in assembly\n 377 |  if (totalAssets() < totalDebt_) return 0;\n\n     |  // @audit-issue Save gas by call this in assembly\n 380 |  uint256 twabSupplyLimit_ = _twabSupplyLimit(_totalSupply);\n\n     |  // @audit-issue Save gas by call this in assembly\n 382 |  uint256 _latentBalance = _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 383 |  uint256 _maxYieldVaultDeposit = yieldVault.maxDeposit(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 398 |  return maxDeposit(_owner);\n\n     |  // @audit-issue Save gas by call this in assembly\n 405 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 405 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 408 |  uint256 _ownerAssets = convertToAssets(balanceOf(_owner));\n\n     |  // @audit-issue Save gas by call this in assembly\n 408 |  uint256 _ownerAssets = convertToAssets(balanceOf(_owner));\n\n     |  // @audit-issue Save gas by call this in assembly\n 416 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 416 |  uint256 _maxWithdraw = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 417 |  uint256 _ownerShares = balanceOf(_owner);\n\n     |  // @audit-issue Save gas by call this in assembly\n 423 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Save gas by call this in assembly\n 424 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Save gas by call this in assembly\n 432 |  uint256 _maxScaledRedeem = _maxWithdraw.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Up);\n\n     |  // @audit-issue Save gas by call this in assembly\n 455 |  uint256 _totalAssets = totalAssets();\n\n     |  // @audit-issue Save gas by call this in assembly\n 458 |  if (_totalAssets == 0) revert ZeroTotalAssets();\n\n     |  // @audit-issue Save gas by call this in assembly\n 460 |  uint256 totalDebt_ = totalDebt();\n\n     |  // @audit-issue Save gas by call this in assembly\n 465 |  return _assets.mulDiv(totalDebt_, _totalAssets, Math.Rounding.Up);\n\n     |  // @audit-issue Save gas by call this in assembly\n 471 |  return convertToAssets(_shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 476 |  uint256 _shares = previewDeposit(_assets);\n\n     |  // @audit-issue Save gas by call this in assembly\n 477 |  _depositAndMint(msg.sender, _receiver, _assets, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 483 |  uint256 _assets = previewMint(_shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 484 |  _depositAndMint(msg.sender, _receiver, _assets, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 494 |  uint256 _shares = previewWithdraw(_assets);\n\n     |  // @audit-issue Save gas by call this in assembly\n 495 |  _burnAndWithdraw(msg.sender, _receiver, _owner, _shares, _assets);\n\n     |  // @audit-issue Save gas by call this in assembly\n 505 |  uint256 _assets = previewRedeem(_shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 506 |  _burnAndWithdraw(msg.sender, _receiver, _owner, _shares, _assets);\n\n     |  // @audit-issue Save gas by call this in assembly\n 533 |  revert PermitCallerNotOwner(msg.sender, _owner);\n\n     |  // @audit-issue Save gas by call this in assembly\n 539 |  if (_asset.allowance(_owner, address(this)) != _assets) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n\n     |  // @audit-issue Save gas by call this in assembly\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n\n     |  // @audit-issue Save gas by call this in assembly\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n\n     |  // @audit-issue Save gas by call this in assembly\n 540 |  IERC20Permit(address(_asset)).permit(_owner, address(this), _assets, _deadline, _v, _r, _s);\n\n     |  // @audit-issue Save gas by call this in assembly\n 543 |  uint256 _shares = previewDeposit(_assets);\n\n     |  // @audit-issue Save gas by call this in assembly\n 544 |  _depositAndMint(_owner, _owner, _assets, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 555 |  uint256 _shares = previewDeposit(_assets);\n\n     |  // @audit-issue Save gas by call this in assembly\n 556 |  _depositAndMint(_owner, _owner, _assets, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 558 |  if (twabController.delegateOf(address(this), _owner) != SPONSORSHIP_ADDRESS) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 562 |  emit Sponsor(_owner, _assets, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 574 |  return _totalDebt(totalSupply());\n\n     |  // @audit-issue Save gas by call this in assembly\n 574 |  return _totalDebt(totalSupply());\n\n     |  // @audit-issue Save gas by call this in assembly\n 585 |  return _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 585 |  return _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 585 |  return _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 592 |  return _availableYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 592 |  return _availableYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 592 |  return _availableYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 598 |  uint256 totalYieldBalance_ = _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 598 |  uint256 totalYieldBalance_ = _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 598 |  uint256 totalYieldBalance_ = _totalYieldBalance(totalAssets(), totalDebt());\n\n     |  // @audit-issue Save gas by call this in assembly\n 612 |  if (_shares == 0) revert MintZeroShares();\n\n     |  // @audit-issue Save gas by call this in assembly\n 615 |  if (_shares > _yieldFeeBalance) revert SharesExceedsYieldFeeBalance(_shares, _yieldFeeBalance);\n\n     |  // @audit-issue Save gas by call this in assembly\n 619 |  _mint(msg.sender, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 621 |  emit ClaimYieldFeeShares(msg.sender, _shares);\n\n     |  // @audit-issue Save gas by call this in assembly\n 632 |  uint256 _totalSupply = totalSupply();\n\n     |  // @audit-issue Save gas by call this in assembly\n 634 |  if (_tokenOut == address(this)) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 636 |  _maxAmountOut = _twabSupplyLimit(_totalSupply);\n\n     |  // @audit-issue Save gas by call this in assembly\n 637 |  } else if (_tokenOut == address(_asset)) {\n\n     |  // @audit-issue Save gas by call this in assembly\n 639 |  _maxAmountOut = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 639 |  _maxAmountOut = _maxYieldVaultWithdraw() + _asset.balanceOf(address(this));\n\n     |  // @audit-issue Save gas by call this in assembly\n 648 |  _availableYieldBalance(totalAssets(), _totalDebt(_totalSupply))\n 649 |  .mulDiv(FEE_PRECISION - yieldFeePercentage, FEE_PRECISION);\n\n     |  // @audit-issue Save gas by call this in assembly\n 648 |  _availableYieldBalance(totalAssets(), _totalDebt(_totalSupply))\n\n     |  // @audit-issue Save gas by call this in assembly\n 648 |  _availableYieldBalance(totalAssets(), _totalDebt(_totalSupply))\n```",
          "loc": [
            "[262](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L262)",
            "[270](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L270)",
            "[300](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L300)",
            "[300](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L300)",
            "[300](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L300)",
            "[301](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L301)",
            "[301](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L301)",
            "[303](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L303)",
            "[304](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L304)",
            "[311](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L311)",
            "[312](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L312)",
            "[330](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L330)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[337](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L337)",
            "[342](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L342)",
            "[343](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L343)",
            "[350](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L350)",
            "[356](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L356)",
            "[357](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L357)",
            "[364](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L364)",
            "[375](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L375)",
            "[376](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L376)",
            "[377](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L377)",
            "[380](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L380)",
            "[382](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L382)",
            "[383](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L383)",
            "[398](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L398)",
            "[405](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L405)",
            "[405](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L405)",
            "[408](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L408)",
            "[408](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L408)",
            "[416](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L416)",
            "[416](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L416)",
            "[417](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L417)",
            "[423](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L423)",
            "[424](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L424)",
            "[432](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L432)",
            "[455](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L455)",
            "[458](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L458)",
            "[460](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L460)",
            "[465](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L465)",
            "[471](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L471)",
            "[476](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L476)",
            "[477](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L477)",
            "[483](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L483)",
            "[484](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L484)",
            "[494](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L494)",
            "[495](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L495)",
            "[505](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L505)",
            "[506](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L506)",
            "[533](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L533)",
            "[539](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L539)",
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)",
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)",
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)",
            "[540](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L540)",
            "[543](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L543)",
            "[544](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L544)",
            "[555](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L555)",
            "[556](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L556)",
            "[558](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L558)",
            "[562](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L562)",
            "[574](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L574)",
            "[574](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L574)",
            "[585](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L585)",
            "[585](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L585)",
            "[585](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L585)",
            "[592](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L592)",
            "[592](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L592)",
            "[592](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L592)",
            "[598](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L598)",
            "[598](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L598)",
            "[598](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L598)",
            "[612](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L612)",
            "[615](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L615)",
            "[619](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L619)",
            "[621](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L621)",
            "[632](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L632)",
            "[634](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L634)",
            "[636](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L636)",
            "[637](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L637)",
            "[639](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L639)",
            "[639](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L639)",
            "[648-649](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L648-L649)",
            "[648](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L648)",
            "[648](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVault.sol#L648)"
          ]
        }
      ]
    },
    {
      "severity": "Disputed",
      "title": "Use bitmap to save gas",
      "description": "> None of these are valid scenarios for a using bitmap\n\nBitmaps in Solidity are essentially a way of representing a set of boolean values within an integer type variable such as `uint256`. Each bit in the integer represents a true or false value (1 or 0), thus allowing efficient storage of multiple boolean values.\r\n\r\nBitmaps can save gas in the Ethereum network because they condense a lot of information into a small amount of storage. In Ethereum, storage is one of the most significant costs in terms of gas usage. By reducing the amount of storage space needed, you can potentially save on gas fees.\r\n\r\nHere's a quick comparison:\r\n\r\nIf you were to represent 256 different boolean values in the traditional way, you would have to declare 256 different `bool` variables. Given that each `bool` occupies a storage slot and each storage slot costs 20,000 gas to initialize, you would end up paying a considerable amount of gas.\r\n\r\nOn the other hand, if you were to use a bitmap, you could store these 256 boolean values within a single `uint256` variable. In other words, you'd only pay for a single storage slot, resulting in significant gas savings.\r\n\r\nHowever, it's important to note that while bitmaps can provide gas efficiencies, they do add complexity to the code, making it harder to read and maintain. Also, using bitmaps is efficient only when dealing with a large number of boolean variables that are frequently changed or accessed together. \r\n\r\nIn contrast, the straightforward counterpart to bitmaps would be using arrays or mappings to store boolean values, with each `bool` value occupying its own storage slot. This approach is simpler and more readable but could potentially be more expensive in terms of gas usage.",
      "gasSavings": null,
      "category": null,
      "instances": [
        {
          "content": "```solidity\nFile: pt-v5-vault/src/PrizeVaultFactory.sol\n\n 121 |  deployedVaults[address(_vault)] = true;\n```",
          "loc": [
            "[121](https://github.com/code-423n4/2024-03-pooltogether/blob/004e027de5569cca5790e6ed80fa51d026df9b75/pt-v5-vault/src/PrizeVaultFactory.sol#L121)"
          ]
        }
      ]
    }
  ],
  "createdAt": "2024-03-04T21:33:53.358Z",
  "updatedAt": "2024-03-04T21:33:53.915Z"
}